{"ast":null,"code":"import { ref } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nexport default {\n  name: 'LoginPage',\n  setup() {\n    const loginForm = ref({\n      username: '',\n      password: ''\n    });\n    const handleLogin = async () => {\n      try {\n        const response = await axios.post('/eShop/user/login', {\n          uname: loginForm.value.username,\n          password: loginForm.value.password\n        });\n        const {\n          code,\n          msg,\n          data\n        } = response.data;\n        if (code === 200 && msg === '成功') {\n          ElMessage.success('登录成功');\n          if (data === '商家') {\n            window.location.href = '/merchant-dashboard';\n          } else if (data === '顾客') {\n            window.location.href = '/customer-dashboard';\n          }\n        } else {\n          ElMessage.error(data || '登录失败');\n        }\n      } catch (error) {\n        ElMessage.error('请求失败，请稍后重试');\n      }\n    };\n    return {\n      loginForm,\n      handleLogin\n    };\n  }\n};","map":{"version":3,"names":["ref","ElMessage","axios","name","setup","loginForm","username","password","handleLogin","response","post","uname","value","code","msg","data","success","window","location","href","error"],"sources":["E:\\Vue\\jsproject\\shop\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n    <div class=\"login-container\">\r\n      <el-card class=\"login-card\">\r\n        <h2 class=\"login-title\">登录</h2>\r\n        <el-form :model=\"loginForm\" @submit.prevent=\"handleLogin\">\r\n          <el-form-item>\r\n            <el-input v-model=\"loginForm.username\" placeholder=\"用户名\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-input\r\n              v-model=\"loginForm.password\"\r\n              type=\"password\"\r\n              placeholder=\"密码\"\r\n            ></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"handleLogin\">登录</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-card>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref } from 'vue';\r\n  import { ElMessage } from 'element-plus';\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: 'LoginPage',\r\n    setup() {\r\n      const loginForm = ref({\r\n        username: '',\r\n        password: '',\r\n      });\r\n  \r\n      const handleLogin = async () => {\r\n        try {\r\n          const response = await axios.post('/eShop/user/login', {\r\n            uname: loginForm.value.username,\r\n            password: loginForm.value.password,\r\n          });\r\n  \r\n          const { code, msg, data } = response.data;\r\n  \r\n          if (code === 200 && msg === '成功') {\r\n            ElMessage.success('登录成功');\r\n            if (data === '商家') {\r\n              window.location.href = '/merchant-dashboard';\r\n            } else if (data === '顾客') {\r\n              window.location.href = '/customer-dashboard';\r\n            }\r\n          } else {\r\n            ElMessage.error(data || '登录失败');\r\n          }\r\n        } catch (error) {\r\n          ElMessage.error('请求失败，请稍后重试');\r\n        }\r\n      };\r\n  \r\n      return {\r\n        loginForm,\r\n        handleLogin,\r\n      };\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .login-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n    margin: 0; /* 确保没有外边距 */\r\n    background-image: url('@/assets/在线购物平台登录界面设计 (3).png');\r\n\r\n    background-size: cover; /* 缩小背景图以适应容器 */\r\n  background-repeat: no-repeat;\r\n  background-position: center; /* 居中显示 */\r\n  }\r\n  \r\n  .login-card {\r\n    width: 350px;\r\n    padding: 30px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n    border-radius: 10px;\r\n    background-color: rgba(255, 255, 255, 0.9);\r\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  }\r\n  \r\n  .login-card:hover {\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n  }\r\n  \r\n  .login-title {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n    color: #333;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .el-input {\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  .el-button {\r\n    width: 100%;\r\n    border-radius: 5px;\r\n    background-color: #66a6ff;\r\n    color: #fff;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .el-button:hover {\r\n    background-color: #5591e6;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAwBE,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,SAAQ,QAAS,cAAc;AACxC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,SAAQ,GAAIL,GAAG,CAAC;MACpBM,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMC,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMP,KAAK,CAACQ,IAAI,CAAC,mBAAmB,EAAE;UACrDC,KAAK,EAAEN,SAAS,CAACO,KAAK,CAACN,QAAQ;UAC/BC,QAAQ,EAAEF,SAAS,CAACO,KAAK,CAACL;QAC5B,CAAC,CAAC;QAEF,MAAM;UAAEM,IAAI;UAAEC,GAAG;UAAEC;QAAK,IAAIN,QAAQ,CAACM,IAAI;QAEzC,IAAIF,IAAG,KAAM,GAAE,IAAKC,GAAE,KAAM,IAAI,EAAE;UAChCb,SAAS,CAACe,OAAO,CAAC,MAAM,CAAC;UACzB,IAAID,IAAG,KAAM,IAAI,EAAE;YACjBE,MAAM,CAACC,QAAQ,CAACC,IAAG,GAAI,qBAAqB;UAC9C,OAAO,IAAIJ,IAAG,KAAM,IAAI,EAAE;YACxBE,MAAM,CAACC,QAAQ,CAACC,IAAG,GAAI,qBAAqB;UAC9C;QACF,OAAO;UACLlB,SAAS,CAACmB,KAAK,CAACL,IAAG,IAAK,MAAM,CAAC;QACjC;MACF,EAAE,OAAOK,KAAK,EAAE;QACdnB,SAAS,CAACmB,KAAK,CAAC,YAAY,CAAC;MAC/B;IACF,CAAC;IAED,OAAO;MACLf,SAAS;MACTG;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}