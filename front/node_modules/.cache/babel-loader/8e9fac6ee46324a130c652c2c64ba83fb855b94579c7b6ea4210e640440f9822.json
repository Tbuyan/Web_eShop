{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nimport Cookies from 'js-cookie'; // 引入 js-cookie 库\n\nexport default {\n  name: 'LoginPage',\n  setup() {\n    const loginForm = ref({\n      username: '',\n      password: ''\n    });\n    const registerForm = ref({\n      u_name: '',\n      password: '',\n      email: '',\n      utype: null\n    });\n    const forgotPasswordForm = ref({\n      email: '',\n      code: ''\n    });\n    const resetForm = ref({\n      newUsername: '',\n      newPassword: ''\n    });\n    const showRegister = ref(false);\n    const showForgotPassword = ref(false);\n    const isCodeVerified = ref(false);\n    const handleLogin = async () => {\n      try {\n        const response = await axios.post('/eShop/user/login', {\n          uname: loginForm.value.username,\n          password: loginForm.value.password\n        });\n        const {\n          code,\n          msg,\n          data\n        } = response.data;\n        if (code === 200 && msg === '成功') {\n          const utype = data.charAt(0);\n          const jwt = data.substring(1);\n\n          // 将 JWT 存储到 Cookie 中\n          Cookies.set('jwt', jwt, {\n            expires: 7\n          });\n          if (utype === '0') {\n            ElMessage.success('登录成功，欢迎来到ESHOP，祝您购物愉快');\n            //window.location.href = '/customer-dashboard';\n          } else if (utype === '1') {\n            ElMessage.success('登录成功，欢迎来到ESHOP，祝您生意红火');\n            window.location.href = '/merchant-dashboard';\n          }\n        } else {\n          ElMessage.error(data || '登录失败');\n        }\n      } catch (error) {\n        ElMessage.error('请求失败，请稍后重试');\n      }\n    };\n    const handleRegister = async () => {\n      try {\n        const response = await axios.post('/eShop/user/register', {\n          uname: registerForm.value.u_name,\n          password: registerForm.value.password,\n          email: registerForm.value.email,\n          utype: registerForm.value.utype\n        });\n        const {\n          code,\n          msg\n        } = response.data;\n        if (code === 200 && msg === '成功') {\n          ElMessage.success('注册成功');\n          showRegister.value = false;\n        } else {\n          ElMessage.error(msg || '注册失败');\n        }\n      } catch (error) {\n        ElMessage.error('请求失败，请稍后重试');\n      }\n    };\n    const sendVerificationCode = async () => {\n      try {\n        await axios.get(`/eShop/user/sendcode/${forgotPasswordForm.value.email}`);\n        ElMessage.success('验证码已发送，请检查您的邮箱');\n      } catch (error) {\n        ElMessage.error('发送验证码失败，请稍后重试');\n      }\n    };\n    const verifyCode = async () => {\n      try {\n        const response = await axios.post('/eShop/user/checkcode', {\n          email: forgotPasswordForm.value.email,\n          code: forgotPasswordForm.value.code\n        });\n        const {\n          data\n        } = response.data;\n        if (data == true) {\n          ElMessage.success('验证码验证成功');\n          isCodeVerified.value = true;\n        } else {\n          ElMessage.error('验证码错误，请重新获取');\n        }\n      } catch (error) {\n        ElMessage.error('验证失败，请稍后重试');\n      }\n    };\n    const resetPassword = async () => {\n      try {\n        const response = await axios.post('/eShop/user/reset', {\n          email: forgotPasswordForm.value.email,\n          uname: resetForm.value.newUsername,\n          password: resetForm.value.newPassword\n        });\n        const {\n          code,\n          msg\n        } = response.data;\n        if (code === 200 && msg === '成功') {\n          ElMessage.success('密码重置成功');\n          showForgotPassword.value = false;\n          isCodeVerified.value = false;\n        } else {\n          ElMessage.error(msg || '重置失败');\n        }\n      } catch (error) {\n        ElMessage.error('请求失败，请稍后重试');\n      }\n    };\n    const handleLogout = () => {\n      // 清除 Cookie 中的 JWT\n      Cookies.remove('jwt');\n      // 清除 axios 默认请求头\n      delete axios.defaults.headers.common['Authorization'];\n      // 跳转回登录界面\n      window.location.href = '/login';\n    };\n    onMounted(() => {\n      // 在组件挂载时设置请求头\n      const jwt = Cookies.get('jwt');\n      if (jwt) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${jwt}`;\n      }\n    });\n    return {\n      loginForm,\n      registerForm,\n      forgotPasswordForm,\n      resetForm,\n      showRegister,\n      showForgotPassword,\n      isCodeVerified,\n      handleLogin,\n      handleRegister,\n      sendVerificationCode,\n      verifyCode,\n      resetPassword,\n      handleLogout\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","ElMessage","axios","Cookies","name","setup","loginForm","username","password","registerForm","u_name","email","utype","forgotPasswordForm","code","resetForm","newUsername","newPassword","showRegister","showForgotPassword","isCodeVerified","handleLogin","response","post","uname","value","msg","data","charAt","jwt","substring","set","expires","success","window","location","href","error","handleRegister","sendVerificationCode","get","verifyCode","resetPassword","handleLogout","remove","defaults","headers","common"],"sources":["E:\\Vue\\jsproject\\shop\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-card class=\"login-card\">\r\n      <h2 class=\"login-title\">登录</h2>\r\n      <el-form :model=\"loginForm\" @submit.prevent=\"handleLogin\">\r\n        <el-form-item>\r\n          <el-input v-model=\"loginForm.username\" placeholder=\"用户名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-input\r\n            v-model=\"loginForm.password\"\r\n            type=\"password\"\r\n            placeholder=\"密码\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleLogin\">登录</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div class=\"options\">\r\n        <el-button class=\"option-button\" type=\"text\" @click=\"showRegister = true\">注册</el-button>\r\n        <el-button class=\"option-button\" type=\"text\" @click=\"showForgotPassword = true\">忘记密码</el-button>\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 注册对话框 -->\r\n    <el-dialog v-model=\"showRegister\" title=\"注册\">\r\n      <el-form :model=\"registerForm\">\r\n        <el-form-item>\r\n          <el-input v-model=\"registerForm.u_name\" placeholder=\"用户名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-input\r\n            v-model=\"registerForm.password\"\r\n            type=\"password\"\r\n            placeholder=\"密码\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-input v-model=\"registerForm.email\" placeholder=\"邮箱\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-select v-model=\"registerForm.utype\" placeholder=\"选择用户类型\">\r\n            <el-option label=\"商家\" :value=\"1\"></el-option>\r\n            <el-option label=\"顾客\" :value=\"0\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleRegister\">提交注册</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n\r\n    <!-- 忘记密码对话框 -->\r\n    <el-dialog v-model=\"showForgotPassword\" title=\"忘记密码\">\r\n      <el-form v-if=\"!isCodeVerified\" :model=\"forgotPasswordForm\">\r\n        <el-form-item>\r\n          <el-input v-model=\"forgotPasswordForm.email\" placeholder=\"邮箱\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"sendVerificationCode\">获取验证码</el-button>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-input v-model=\"forgotPasswordForm.code\" placeholder=\"验证码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"verifyCode\">验证验证码</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      <el-form v-else :model=\"resetForm\">\r\n        <el-form-item>\r\n          <el-input v-model=\"resetForm.newUsername\" placeholder=\"新用户名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-input\r\n            v-model=\"resetForm.newPassword\"\r\n            type=\"password\"\r\n            placeholder=\"新密码\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"resetPassword\">重置密码</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport { ElMessage } from 'element-plus';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie'; // 引入 js-cookie 库\r\n\r\nexport default {\r\n  name: 'LoginPage',\r\n  setup() {\r\n    const loginForm = ref({\r\n      username: '',\r\n      password: '',\r\n    });\r\n\r\n    const registerForm = ref({\r\n      u_name: '',\r\n      password: '',\r\n      email: '',\r\n      utype: null,\r\n    });\r\n\r\n    const forgotPasswordForm = ref({\r\n      email: '',\r\n      code: '',\r\n    });\r\n\r\n    const resetForm = ref({\r\n      newUsername: '',\r\n      newPassword: '',\r\n    });\r\n\r\n    const showRegister = ref(false);\r\n    const showForgotPassword = ref(false);\r\n    const isCodeVerified = ref(false);\r\n\r\n    const handleLogin = async () => {\r\n      try {\r\n        const response = await axios.post('/eShop/user/login', {\r\n          uname: loginForm.value.username,\r\n          password: loginForm.value.password,\r\n        });\r\n\r\n        const { code, msg, data } = response.data;\r\n\r\n        if (code === 200 && msg === '成功') {\r\n          const utype = data.charAt(0);\r\n          const jwt = data.substring(1);\r\n\r\n          // 将 JWT 存储到 Cookie 中\r\n          Cookies.set('jwt', jwt, { expires: 7 });\r\n\r\n          if (utype === '0') {\r\n            ElMessage.success('登录成功，欢迎来到ESHOP，祝您购物愉快');\r\n            //window.location.href = '/customer-dashboard';\r\n          } else if (utype === '1') {\r\n            ElMessage.success('登录成功，欢迎来到ESHOP，祝您生意红火');\r\n            window.location.href = '/merchant-dashboard';\r\n          }\r\n        } else {\r\n          ElMessage.error(data || '登录失败');\r\n        }\r\n      } catch (error) {\r\n        ElMessage.error('请求失败，请稍后重试');\r\n      }\r\n    };\r\n\r\n    const handleRegister = async () => {\r\n      try {\r\n        const response = await axios.post('/eShop/user/register', {\r\n          uname: registerForm.value.u_name,\r\n          password: registerForm.value.password,\r\n          email: registerForm.value.email,\r\n          utype: registerForm.value.utype,\r\n        });\r\n\r\n        const { code, msg } = response.data;\r\n\r\n        if (code === 200 && msg === '成功') {\r\n          ElMessage.success('注册成功');\r\n          showRegister.value = false;\r\n        } else {\r\n          ElMessage.error(msg || '注册失败');\r\n        }\r\n      } catch (error) {\r\n        ElMessage.error('请求失败，请稍后重试');\r\n      }\r\n    };\r\n\r\n    const sendVerificationCode = async () => {\r\n      try {\r\n        await axios.get(`/eShop/user/sendcode/${forgotPasswordForm.value.email}`);\r\n        ElMessage.success('验证码已发送，请检查您的邮箱');\r\n      } catch (error) {\r\n        ElMessage.error('发送验证码失败，请稍后重试');\r\n      }\r\n    };\r\n\r\n    const verifyCode = async () => {\r\n      try {\r\n        const response = await axios.post('/eShop/user/checkcode', {\r\n          email: forgotPasswordForm.value.email,\r\n          code: forgotPasswordForm.value.code,\r\n        });\r\n\r\n        const { data } = response.data;\r\n\r\n        if (data == true) {\r\n          ElMessage.success('验证码验证成功');\r\n          isCodeVerified.value = true;\r\n        } else {\r\n          ElMessage.error('验证码错误，请重新获取');\r\n        }\r\n      } catch (error) {\r\n        ElMessage.error('验证失败，请稍后重试');\r\n      }\r\n    };\r\n\r\n    const resetPassword = async () => {\r\n      try {\r\n        const response = await axios.post('/eShop/user/reset', {\r\n          email: forgotPasswordForm.value.email,\r\n          uname: resetForm.value.newUsername,\r\n          password: resetForm.value.newPassword,\r\n        });\r\n\r\n        const { code, msg } = response.data;\r\n\r\n        if (code === 200 && msg === '成功') {\r\n          ElMessage.success('密码重置成功');\r\n          showForgotPassword.value = false;\r\n          isCodeVerified.value = false;\r\n        } else {\r\n          ElMessage.error(msg || '重置失败');\r\n        }\r\n      } catch (error) {\r\n        ElMessage.error('请求失败，请稍后重试');\r\n      }\r\n    };\r\n\r\n    const handleLogout = () => {\r\n      // 清除 Cookie 中的 JWT\r\n      Cookies.remove('jwt');\r\n      // 清除 axios 默认请求头\r\n      delete axios.defaults.headers.common['Authorization'];\r\n      // 跳转回登录界面\r\n      window.location.href = '/login';\r\n    };\r\n\r\n    onMounted(() => {\r\n      // 在组件挂载时设置请求头\r\n      const jwt = Cookies.get('jwt');\r\n      if (jwt) {\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${jwt}`;\r\n      }\r\n    });\r\n\r\n    return {\r\n      loginForm,\r\n      registerForm,\r\n      forgotPasswordForm,\r\n      resetForm,\r\n      showRegister,\r\n      showForgotPassword,\r\n      isCodeVerified,\r\n      handleLogin,\r\n      handleRegister,\r\n      sendVerificationCode,\r\n      verifyCode,\r\n      resetPassword,\r\n      handleLogout,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  margin: 0;\r\n  background-image: url('@/assets/在线购物平台登录界面设计 (4).png');\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n}\r\n\r\n.login-card {\r\n  width: 350px;\r\n  padding: 30px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n  border-radius: 10px;\r\n  background-color: rgba(255, 255, 255, 0.9);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  position: relative;\r\n}\r\n\r\n.login-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.login-title {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  color: #333;\r\n  font-weight: bold;\r\n}\r\n\r\n.el-input {\r\n  border-radius: 5px;\r\n}\r\n\r\n.el-button {\r\n  width: 100%;\r\n  border-radius: 5px;\r\n  background-color: #66a6ff;\r\n  color: #fff;\r\n  font-weight: bold;\r\n}\r\n\r\n.el-button:hover {\r\n  background-color: #5591e6;\r\n}\r\n\r\n.options {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 10px;\r\n}\r\n\r\n.option-button {\r\n  width: auto;\r\n  text-align: center;\r\n  color: #333;\r\n  background-color: transparent;\r\n  padding: 0;\r\n}\r\n</style>\r\n"],"mappings":"AAyFA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,SAAQ,QAAS,cAAc;AACxC,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,OAAM,MAAO,WAAW,EAAE;;AAEjC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,SAAQ,GAAIP,GAAG,CAAC;MACpBQ,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMC,YAAW,GAAIV,GAAG,CAAC;MACvBW,MAAM,EAAE,EAAE;MACVF,QAAQ,EAAE,EAAE;MACZG,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE;IACT,CAAC,CAAC;IAEF,MAAMC,kBAAiB,GAAId,GAAG,CAAC;MAC7BY,KAAK,EAAE,EAAE;MACTG,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,MAAMC,SAAQ,GAAIhB,GAAG,CAAC;MACpBiB,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE;IACf,CAAC,CAAC;IAEF,MAAMC,YAAW,GAAInB,GAAG,CAAC,KAAK,CAAC;IAC/B,MAAMoB,kBAAiB,GAAIpB,GAAG,CAAC,KAAK,CAAC;IACrC,MAAMqB,cAAa,GAAIrB,GAAG,CAAC,KAAK,CAAC;IAEjC,MAAMsB,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMpB,KAAK,CAACqB,IAAI,CAAC,mBAAmB,EAAE;UACrDC,KAAK,EAAElB,SAAS,CAACmB,KAAK,CAAClB,QAAQ;UAC/BC,QAAQ,EAAEF,SAAS,CAACmB,KAAK,CAACjB;QAC5B,CAAC,CAAC;QAEF,MAAM;UAAEM,IAAI;UAAEY,GAAG;UAAEC;QAAK,IAAIL,QAAQ,CAACK,IAAI;QAEzC,IAAIb,IAAG,KAAM,GAAE,IAAKY,GAAE,KAAM,IAAI,EAAE;UAChC,MAAMd,KAAI,GAAIe,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;UAC5B,MAAMC,GAAE,GAAIF,IAAI,CAACG,SAAS,CAAC,CAAC,CAAC;;UAE7B;UACA3B,OAAO,CAAC4B,GAAG,CAAC,KAAK,EAAEF,GAAG,EAAE;YAAEG,OAAO,EAAE;UAAE,CAAC,CAAC;UAEvC,IAAIpB,KAAI,KAAM,GAAG,EAAE;YACjBX,SAAS,CAACgC,OAAO,CAAC,uBAAuB,CAAC;YAC1C;UACF,OAAO,IAAIrB,KAAI,KAAM,GAAG,EAAE;YACxBX,SAAS,CAACgC,OAAO,CAAC,uBAAuB,CAAC;YAC1CC,MAAM,CAACC,QAAQ,CAACC,IAAG,GAAI,qBAAqB;UAC9C;QACF,OAAO;UACLnC,SAAS,CAACoC,KAAK,CAACV,IAAG,IAAK,MAAM,CAAC;QACjC;MACF,EAAE,OAAOU,KAAK,EAAE;QACdpC,SAAS,CAACoC,KAAK,CAAC,YAAY,CAAC;MAC/B;IACF,CAAC;IAED,MAAMC,cAAa,GAAI,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMhB,QAAO,GAAI,MAAMpB,KAAK,CAACqB,IAAI,CAAC,sBAAsB,EAAE;UACxDC,KAAK,EAAEf,YAAY,CAACgB,KAAK,CAACf,MAAM;UAChCF,QAAQ,EAAEC,YAAY,CAACgB,KAAK,CAACjB,QAAQ;UACrCG,KAAK,EAAEF,YAAY,CAACgB,KAAK,CAACd,KAAK;UAC/BC,KAAK,EAAEH,YAAY,CAACgB,KAAK,CAACb;QAC5B,CAAC,CAAC;QAEF,MAAM;UAAEE,IAAI;UAAEY;QAAI,IAAIJ,QAAQ,CAACK,IAAI;QAEnC,IAAIb,IAAG,KAAM,GAAE,IAAKY,GAAE,KAAM,IAAI,EAAE;UAChCzB,SAAS,CAACgC,OAAO,CAAC,MAAM,CAAC;UACzBf,YAAY,CAACO,KAAI,GAAI,KAAK;QAC5B,OAAO;UACLxB,SAAS,CAACoC,KAAK,CAACX,GAAE,IAAK,MAAM,CAAC;QAChC;MACF,EAAE,OAAOW,KAAK,EAAE;QACdpC,SAAS,CAACoC,KAAK,CAAC,YAAY,CAAC;MAC/B;IACF,CAAC;IAED,MAAME,oBAAmB,GAAI,MAAAA,CAAA,KAAY;MACvC,IAAI;QACF,MAAMrC,KAAK,CAACsC,GAAG,CAAC,wBAAwB3B,kBAAkB,CAACY,KAAK,CAACd,KAAK,EAAE,CAAC;QACzEV,SAAS,CAACgC,OAAO,CAAC,gBAAgB,CAAC;MACrC,EAAE,OAAOI,KAAK,EAAE;QACdpC,SAAS,CAACoC,KAAK,CAAC,eAAe,CAAC;MAClC;IACF,CAAC;IAED,MAAMI,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMnB,QAAO,GAAI,MAAMpB,KAAK,CAACqB,IAAI,CAAC,uBAAuB,EAAE;UACzDZ,KAAK,EAAEE,kBAAkB,CAACY,KAAK,CAACd,KAAK;UACrCG,IAAI,EAAED,kBAAkB,CAACY,KAAK,CAACX;QACjC,CAAC,CAAC;QAEF,MAAM;UAAEa;QAAK,IAAIL,QAAQ,CAACK,IAAI;QAE9B,IAAIA,IAAG,IAAK,IAAI,EAAE;UAChB1B,SAAS,CAACgC,OAAO,CAAC,SAAS,CAAC;UAC5Bb,cAAc,CAACK,KAAI,GAAI,IAAI;QAC7B,OAAO;UACLxB,SAAS,CAACoC,KAAK,CAAC,aAAa,CAAC;QAChC;MACF,EAAE,OAAOA,KAAK,EAAE;QACdpC,SAAS,CAACoC,KAAK,CAAC,YAAY,CAAC;MAC/B;IACF,CAAC;IAED,MAAMK,aAAY,GAAI,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMpB,QAAO,GAAI,MAAMpB,KAAK,CAACqB,IAAI,CAAC,mBAAmB,EAAE;UACrDZ,KAAK,EAAEE,kBAAkB,CAACY,KAAK,CAACd,KAAK;UACrCa,KAAK,EAAET,SAAS,CAACU,KAAK,CAACT,WAAW;UAClCR,QAAQ,EAAEO,SAAS,CAACU,KAAK,CAACR;QAC5B,CAAC,CAAC;QAEF,MAAM;UAAEH,IAAI;UAAEY;QAAI,IAAIJ,QAAQ,CAACK,IAAI;QAEnC,IAAIb,IAAG,KAAM,GAAE,IAAKY,GAAE,KAAM,IAAI,EAAE;UAChCzB,SAAS,CAACgC,OAAO,CAAC,QAAQ,CAAC;UAC3Bd,kBAAkB,CAACM,KAAI,GAAI,KAAK;UAChCL,cAAc,CAACK,KAAI,GAAI,KAAK;QAC9B,OAAO;UACLxB,SAAS,CAACoC,KAAK,CAACX,GAAE,IAAK,MAAM,CAAC;QAChC;MACF,EAAE,OAAOW,KAAK,EAAE;QACdpC,SAAS,CAACoC,KAAK,CAAC,YAAY,CAAC;MAC/B;IACF,CAAC;IAED,MAAMM,YAAW,GAAIA,CAAA,KAAM;MACzB;MACAxC,OAAO,CAACyC,MAAM,CAAC,KAAK,CAAC;MACrB;MACA,OAAO1C,KAAK,CAAC2C,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;MACrD;MACAb,MAAM,CAACC,QAAQ,CAACC,IAAG,GAAI,QAAQ;IACjC,CAAC;IAEDpC,SAAS,CAAC,MAAM;MACd;MACA,MAAM6B,GAAE,GAAI1B,OAAO,CAACqC,GAAG,CAAC,KAAK,CAAC;MAC9B,IAAIX,GAAG,EAAE;QACP3B,KAAK,CAAC2C,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,IAAI,UAAUlB,GAAG,EAAE;MAClE;IACF,CAAC,CAAC;IAEF,OAAO;MACLvB,SAAS;MACTG,YAAY;MACZI,kBAAkB;MAClBE,SAAS;MACTG,YAAY;MACZC,kBAAkB;MAClBC,cAAc;MACdC,WAAW;MACXiB,cAAc;MACdC,oBAAoB;MACpBE,UAAU;MACVC,aAAa;MACbC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}