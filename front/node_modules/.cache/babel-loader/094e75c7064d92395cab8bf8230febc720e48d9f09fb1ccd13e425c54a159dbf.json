{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport axios from 'axios';\nexport default {\n  name: 'CustomerPage',\n  setup() {\n    const products = ref([]);\n    const currentPage = ref(1);\n    const pageSize = ref(10);\n    const showDetails = ref(false);\n    const selectedProduct = ref({});\n    const fetchProducts = async () => {\n      try {\n        const response = await axios.get('/product/alllist');\n        if (response.data.code === 200) {\n          products.value = response.data.data;\n        } else {\n          console.error('Failed to fetch products:', response.data.msg);\n        }\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n    const paginatedProducts = computed(() => {\n      const start = (currentPage.value - 1) * pageSize.value;\n      const end = start + pageSize.value;\n      return products.value.slice(start, end);\n    });\n    const handlePageChange = page => {\n      currentPage.value = page;\n    };\n    const showProductDetails = product => {\n      selectedProduct.value = product;\n      showDetails.value = true;\n    };\n    onMounted(() => {\n      fetchProducts();\n    });\n    return {\n      products,\n      currentPage,\n      pageSize,\n      paginatedProducts,\n      showDetails,\n      selectedProduct,\n      handlePageChange,\n      showProductDetails\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","name","setup","products","currentPage","pageSize","showDetails","selectedProduct","fetchProducts","response","get","data","code","value","console","error","msg","paginatedProducts","computed","start","end","slice","handlePageChange","page","showProductDetails","product"],"sources":["E:\\Vue\\jsproject\\shop\\src\\views\\CustomerPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"product-container\">\r\n      <el-table :data=\"paginatedProducts\" style=\"width: 100%\">\r\n        <el-table-column prop=\"pname\" label=\"商品名称\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"ppri\" label=\"价格\" width=\"100\"></el-table-column>\r\n        <el-table-column label=\"操作\" width=\"120\">\r\n          <template #default=\"scope\">\r\n            <el-button type=\"text\" @click=\"showProductDetails(scope.row)\">查看详情</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n  \r\n      <el-pagination\r\n        background\r\n        layout=\"prev, pager, next\"\r\n        :total=\"products.length\"\r\n        :page-size=\"pageSize\"\r\n        @current-change=\"handlePageChange\"\r\n      ></el-pagination>\r\n  \r\n      <el-dialog v-model=\"showDetails\" title=\"商品详情\">\r\n        <p>名称: {{ selectedProduct.pname }}</p>\r\n        <p>类型: {{ selectedProduct.ptype }}</p>\r\n        <p>描述: {{ selectedProduct.pdes }}</p>\r\n        <p>库存: {{ selectedProduct.pcount }}</p>\r\n        <p>价格: {{ selectedProduct.ppri }}</p>\r\n      </el-dialog>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, onMounted } from 'vue';\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: 'CustomerPage',\r\n    setup() {\r\n      const products = ref([]);\r\n      const currentPage = ref(1);\r\n      const pageSize = ref(10);\r\n      const showDetails = ref(false);\r\n      const selectedProduct = ref({});\r\n  \r\n      const fetchProducts = async () => {\r\n        try {\r\n          const response = await axios.get('/product/alllist');\r\n          if (response.data.code === 200) {\r\n            products.value = response.data.data;\r\n          } else {\r\n            console.error('Failed to fetch products:', response.data.msg);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching products:', error);\r\n        }\r\n      };\r\n  \r\n      const paginatedProducts = computed(() => {\r\n        const start = (currentPage.value - 1) * pageSize.value;\r\n        const end = start + pageSize.value;\r\n        return products.value.slice(start, end);\r\n      });\r\n  \r\n      const handlePageChange = (page) => {\r\n        currentPage.value = page;\r\n      };\r\n  \r\n      const showProductDetails = (product) => {\r\n        selectedProduct.value = product;\r\n        showDetails.value = true;\r\n      };\r\n  \r\n      onMounted(() => {\r\n        fetchProducts();\r\n      });\r\n  \r\n      return {\r\n        products,\r\n        currentPage,\r\n        pageSize,\r\n        paginatedProducts,\r\n        showDetails,\r\n        selectedProduct,\r\n        handlePageChange,\r\n        showProductDetails,\r\n      };\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .product-container {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .el-table {\r\n    margin-bottom: 20px;\r\n  }\r\n  </style>\r\n  "],"mappings":"AA+BE,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAKA,CAAA,EAAG;IACN,MAAMC,QAAO,GAAIL,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMM,WAAU,GAAIN,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAMO,QAAO,GAAIP,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMQ,WAAU,GAAIR,GAAG,CAAC,KAAK,CAAC;IAC9B,MAAMS,eAAc,GAAIT,GAAG,CAAC,CAAC,CAAC,CAAC;IAE/B,MAAMU,aAAY,GAAI,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAC,kBAAkB,CAAC;QACpD,IAAID,QAAQ,CAACE,IAAI,CAACC,IAAG,KAAM,GAAG,EAAE;UAC9BT,QAAQ,CAACU,KAAI,GAAIJ,QAAQ,CAACE,IAAI,CAACA,IAAI;QACrC,OAAO;UACLG,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEN,QAAQ,CAACE,IAAI,CAACK,GAAG,CAAC;QAC/D;MACF,EAAE,OAAOD,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAED,MAAME,iBAAgB,GAAIC,QAAQ,CAAC,MAAM;MACvC,MAAMC,KAAI,GAAI,CAACf,WAAW,CAACS,KAAI,GAAI,CAAC,IAAIR,QAAQ,CAACQ,KAAK;MACtD,MAAMO,GAAE,GAAID,KAAI,GAAId,QAAQ,CAACQ,KAAK;MAClC,OAAOV,QAAQ,CAACU,KAAK,CAACQ,KAAK,CAACF,KAAK,EAAEC,GAAG,CAAC;IACzC,CAAC,CAAC;IAEF,MAAME,gBAAe,GAAKC,IAAI,IAAK;MACjCnB,WAAW,CAACS,KAAI,GAAIU,IAAI;IAC1B,CAAC;IAED,MAAMC,kBAAiB,GAAKC,OAAO,IAAK;MACtClB,eAAe,CAACM,KAAI,GAAIY,OAAO;MAC/BnB,WAAW,CAACO,KAAI,GAAI,IAAI;IAC1B,CAAC;IAEDd,SAAS,CAAC,MAAM;MACdS,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC;IAEF,OAAO;MACLL,QAAQ;MACRC,WAAW;MACXC,QAAQ;MACRY,iBAAiB;MACjBX,WAAW;MACXC,eAAe;MACfe,gBAAgB;MAChBE;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}