{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport { ref, onMounted, nextTick } from 'vue';\nimport axios from 'axios';\nimport * as echarts from 'echarts';\nexport default {\n  name: 'MerchantDashboard',\n  setup() {\n    const activeView = ref('orders');\n    const orderDetails = ref([]);\n    const products = ref([]);\n    const visitorRecords = ref([]);\n    const selectedProduct = ref(null);\n    const chartRef = ref(null);\n    let chartInstance = null;\n    const formatPath = path => path.replace(/\\\\/g, '/');\n    const editDialogVisible = ref(false);\n    const addDialogVisible = ref(false);\n    const editProductForm = ref({\n      pname: '',\n      pdes: '',\n      ppri: 0,\n      pcount: 0,\n      ptype: '',\n      productId: null\n    });\n    const newProductForm = ref({\n      purl: '',\n      pname: '',\n      pdes: '',\n      ppri: 0,\n      pcount: 0,\n      ptype: ''\n    });\n    const jwt = sessionStorage.getItem('jwt');\n    if (jwt) {\n      axios.defaults.headers.common['Authorization'] = `${jwt}`;\n    }\n    const showOrders = () => {\n      activeView.value = 'orders';\n      updateChart();\n    };\n    const showProducts = () => {\n      activeView.value = 'products';\n      fetchProducts();\n    };\n    const showVisitorRecords = () => {\n      activeView.value = 'visitorRecords';\n      fetchVisitorRecords();\n    };\n    const fetchOrderDetails = async () => {\n      try {\n        const uid = sessionStorage.getItem('uid');\n        if (!uid) {\n          console.error('用户ID未找到');\n          return;\n        }\n        const response = await axios.get('/eShop/orders/getordersbysaler', {\n          params: {\n            uid\n          }\n        });\n        if (response.status !== 200) {\n          console.error('请求失败，状态码:', response.status);\n          return;\n        }\n        const orderDetailsList = response.data.data;\n        console.log('订单详情数据:', orderDetailsList);\n        if (!Array.isArray(orderDetailsList)) {\n          console.error('订单详情数据不是数组:', orderDetailsList);\n          return;\n        }\n        const ordersPromises = orderDetailsList.map(async orderDetail => {\n          try {\n            const orderResponse = await axios.post('/eShop/orders/getorderbyorderdetail', {\n              oid: orderDetail.oid\n            });\n            if (orderResponse.status !== 200) {\n              console.error('获取订单信息失败，状态码:', orderResponse.status);\n              return null;\n            }\n            const order = orderResponse.data.data;\n            const [name, email, address] = order.address.split(' ');\n            const orderTime = new Date(parseInt(order.otime)).toISOString().split('T')[0];\n            const productResponse = await axios.get('/eShop/product/getproductbyid', {\n              params: {\n                pid: orderDetail.pid\n              }\n            });\n            if (productResponse.status !== 200) {\n              console.error('获取商品信息失败，状态码:', productResponse.status);\n              return null;\n            }\n            const productName = productResponse.data.data.pname;\n            return {\n              ...orderDetail,\n              customerName: name,\n              customerEmail: email,\n              customerAddress: address,\n              orderTime,\n              productName,\n              productQuantity: orderDetail.odPCount,\n              odPMoney: parseFloat(orderDetail.odPMoney)\n            };\n          } catch (error) {\n            console.error('获取订单信息时出错:', error);\n            return null;\n          }\n        });\n        orderDetails.value = (await Promise.all(ordersPromises)).filter(item => item !== null);\n        console.log(orderDetails.value);\n        updateChart();\n      } catch (error) {\n        console.error('获取订单详情失败:', error);\n      }\n    };\n    const fetchProducts = async () => {\n      try {\n        const uid = sessionStorage.getItem('uid');\n        if (!uid) {\n          console.error('用户ID未找到');\n          return;\n        }\n        const response = await axios.get('/eShop/product/getproductbysaler', {\n          params: {\n            uid\n          }\n        });\n        if (response.status !== 200) {\n          console.error('请求失败，状态码:', response.status);\n          return;\n        }\n        products.value = response.data.data.map(product => ({\n          ...product\n        }));\n        console.log('商品数据:', products.value);\n      } catch (error) {\n        console.error('获取商品信息失败:', error);\n      }\n    };\n    const fetchVisitorRecords = async () => {\n      try {\n        const uid = sessionStorage.getItem('uid');\n        if (!uid) {\n          console.error('用户ID未找到');\n          return;\n        }\n        const response = await axios.get('/eShop/shopexp/getsalershopexp', {\n          params: {\n            uid\n          }\n        });\n        if (response.status !== 200) {\n          console.error('请求失败，状态码:', response.status);\n          return;\n        }\n        const shopExpList = response.data.data;\n        console.log('访客记录数据:', shopExpList);\n        const recordsPromises = shopExpList.map(async shopExp => {\n          try {\n            const productResponse = await axios.get('/eShop/product/getproductbyid', {\n              params: {\n                pid: shopExp.pid\n              }\n            });\n            if (productResponse.status !== 200) {\n              console.error('获取商品信息失败，状态码:', productResponse.status);\n              return null;\n            }\n            const product = productResponse.data.data;\n            const visitTime = new Date(parseInt(shopExp.seTime)).toLocaleString();\n            return {\n              productImage: formatPath(product.purl),\n              productName: product.pname,\n              productPrice: product.ppri,\n              visitorId: shopExp.uid0,\n              visitTime\n            };\n          } catch (error) {\n            console.error('获取商品信息时出错:', error);\n            return null;\n          }\n        });\n        visitorRecords.value = (await Promise.all(recordsPromises)).filter(item => item !== null);\n        console.log(visitorRecords.value);\n      } catch (error) {\n        console.error('获取访客记录失败:', error);\n      }\n    };\n    const updateChart = async () => {\n      await nextTick();\n      if (chartInstance) {\n        chartInstance.dispose(); // 销毁现有实例\n      }\n      chartInstance = echarts.init(chartRef.value); // 重新初始化\n\n      const today = new Date();\n      const dates = Array.from({\n        length: 7\n      }, (_, i) => {\n        const date = new Date(today);\n        date.setDate(today.getDate() - i);\n        return date.toISOString().split('T')[0];\n      }).reverse();\n      const orderAmounts = dates.map(date => {\n        const dailyOrders = orderDetails.value.filter(order => order.orderTime.startsWith(date));\n        console.log(`Date: ${date}, Orders:`, dailyOrders);\n        return dailyOrders.reduce((sum, order) => sum + order.odPMoney, 0);\n      });\n      const option = {\n        title: {\n          text: '订单金额统计'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: dates\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: orderAmounts,\n          type: 'line'\n        }]\n      };\n      chartInstance.setOption(option);\n    };\n    const selectProduct = product => {\n      selectedProduct.value = product;\n    };\n    const editProduct = product => {\n      editProductForm.value = {\n        ...product\n      };\n      editDialogVisible.value = true;\n    };\n    const deleteProduct = async product => {\n      try {\n        const response = await axios.post('/eShop/product/deleteproduct', {\n          pid: product.productId\n        });\n        if (response.status === 200) {\n          console.log('商品删除成功');\n          fetchProducts(); // 更新商品列表\n          selectedProduct.value = null; // 清除选中状态\n        } else {\n          console.error('商品删除失败，状态码:', response.status);\n        }\n      } catch (error) {\n        console.error('删除商品时出错:', error);\n      }\n    };\n    const updateProduct = async () => {\n      try {\n        const response = await axios.post('/eShop/product/updateproduct', editProductForm.value);\n        if (response.status === 200) {\n          console.log('商品更新成功');\n          editDialogVisible.value = false;\n          fetchProducts(); // 更新商品列表\n        } else {\n          console.error('商品更新失败，状态码:', response.status);\n        }\n      } catch (error) {\n        console.error('更新商品时出错:', error);\n      }\n    };\n    const openAddProductDialog = () => {\n      newProductForm.value = {\n        purl: '',\n        pname: '',\n        pdes: '',\n        ppri: 0,\n        pcount: 0,\n        ptype: ''\n      };\n      addDialogVisible.value = true;\n    };\n    const addProduct = async () => {\n      try {\n        const uid = sessionStorage.getItem('uid');\n        if (!uid) {\n          console.error('用户ID未找到');\n          return;\n        }\n        const response = await axios.post('/eShop/product/addproduct', {\n          ...newProductForm.value,\n          uid\n        });\n        if (response.status === 200) {\n          console.log('商品添加成功');\n          addDialogVisible.value = false;\n          fetchProducts(); // 更新商品列表\n        } else {\n          console.error('商品添加失败，状态码:', response.status);\n        }\n      } catch (error) {\n        console.error('添加商品时出错:', error);\n      }\n    };\n    onMounted(() => {\n      if (activeView.value === 'orders') {\n        fetchOrderDetails();\n      }\n    });\n    return {\n      activeView,\n      orderDetails,\n      products,\n      visitorRecords,\n      selectedProduct,\n      showOrders,\n      showProducts,\n      showVisitorRecords,\n      chartRef,\n      chartInstance,\n      formatPath,\n      editDialogVisible,\n      addDialogVisible,\n      editProductForm,\n      newProductForm,\n      selectProduct,\n      editProduct,\n      deleteProduct,\n      updateProduct,\n      openAddProductDialog,\n      addProduct\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","nextTick","axios","echarts","name","setup","activeView","orderDetails","products","visitorRecords","selectedProduct","chartRef","chartInstance","formatPath","path","replace","editDialogVisible","addDialogVisible","editProductForm","pname","pdes","ppri","pcount","ptype","productId","newProductForm","purl","jwt","sessionStorage","getItem","defaults","headers","common","showOrders","value","updateChart","showProducts","fetchProducts","showVisitorRecords","fetchVisitorRecords","fetchOrderDetails","uid","console","error","response","get","params","status","orderDetailsList","data","log","Array","isArray","ordersPromises","map","orderDetail","orderResponse","post","oid","order","email","address","split","orderTime","Date","parseInt","otime","toISOString","productResponse","pid","productName","customerName","customerEmail","customerAddress","productQuantity","odPCount","odPMoney","parseFloat","Promise","all","filter","item","product","shopExpList","recordsPromises","shopExp","visitTime","seTime","toLocaleString","productImage","productPrice","visitorId","uid0","dispose","init","today","dates","from","length","_","i","date","setDate","getDate","reverse","orderAmounts","dailyOrders","startsWith","reduce","sum","option","title","text","tooltip","trigger","xAxis","type","yAxis","series","setOption","selectProduct","editProduct","deleteProduct","updateProduct","openAddProductDialog","addProduct"],"sources":["E:\\Vue\\jsproject\\shop\\src\\views\\MerchantPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"merchant-dashboard\">\r\n    <el-container>\r\n      <!-- 侧边栏 -->\r\n      <el-aside width=\"200px\">\r\n        <el-menu default-active=\"1\" class=\"el-menu-vertical-demo\">\r\n          <el-menu-item index=\"1\" @click=\"showOrders\">\r\n            <template v-slot:title>\r\n              <i class=\"el-icon-s-order\"></i>\r\n              <span>订单管理</span>\r\n            </template>\r\n          </el-menu-item>\r\n          <el-menu-item index=\"2\" @click=\"showProducts\">\r\n            <template v-slot:title>\r\n              <i class=\"el-icon-goods\"></i>\r\n              <span>我的商品</span>\r\n            </template>\r\n          </el-menu-item>\r\n          <el-menu-item index=\"3\" @click=\"showVisitorRecords\">\r\n            <template v-slot:title>\r\n              <i class=\"el-icon-user\"></i>\r\n              <span>访客记录</span>\r\n            </template>\r\n          </el-menu-item>\r\n        </el-menu>\r\n      </el-aside>\r\n\r\n      <!-- 主内容区 -->\r\n      <el-main>\r\n        <!-- 订单展示 -->\r\n        <div v-if=\"activeView === 'orders'\">\r\n          <h2>订单管理</h2>\r\n          <el-table :data=\"orderDetails\" style=\"width: 100%\">\r\n            <el-table-column prop=\"oid\" label=\"订单号\" width=\"180\"></el-table-column>\r\n            <el-table-column prop=\"productName\" label=\"商品名称\" width=\"180\"></el-table-column>\r\n            <el-table-column prop=\"productQuantity\" label=\"商品数量\" width=\"180\"></el-table-column>\r\n            <el-table-column prop=\"customerName\" label=\"客户姓名\" width=\"180\"></el-table-column>\r\n            <el-table-column prop=\"customerEmail\" label=\"客户邮箱\" width=\"180\"></el-table-column>\r\n            <el-table-column prop=\"customerAddress\" label=\"客户地址\" width=\"180\"></el-table-column>\r\n            <el-table-column prop=\"odPMoney\" label=\"订单金额\" width=\"180\"></el-table-column>\r\n            <el-table-column prop=\"orderTime\" label=\"订单时间\" width=\"180\"></el-table-column>\r\n          </el-table>\r\n\r\n          <!-- 折线图 -->\r\n          <div ref=\"chartRef\" style=\"width: 100%; height: 400px; margin-top: 20px;\"></div>\r\n        </div>\r\n\r\n        <!-- 商品管理 -->\r\n        <div v-if=\"activeView === 'products'\">\r\n          <h2>商品管理\r\n            <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"openAddProductDialog\" style=\"float: right;\">\r\n              新增商品\r\n            </el-button>\r\n          </h2>\r\n          <!-- 商品管理内容 -->\r\n          <el-row :gutter=\"20\">\r\n            <el-col :span=\"8\" v-for=\"product in products\" :key=\"product.productId\">\r\n              <el-card\r\n                class=\"product-card\"\r\n                :body-style=\"{ padding: '20px' }\"\r\n                @dblclick=\"editProduct(product)\"\r\n                @click=\"selectProduct(product)\"\r\n                :class=\"{ selected: selectedProduct && selectedProduct.productId === product.productId }\"\r\n              >\r\n                <img :src=\"formatPath(product.purl)\" alt=\"商品图片\" class=\"product-image\">\r\n                <div class=\"product-info\">\r\n                  <h3>{{ product.pname }}</h3>\r\n                  <p>{{ product.pdes }}</p>\r\n                  <p>价格: ¥{{ product.ppri }}</p>\r\n                  <p>库存: {{ product.pcount }}</p>\r\n                  <p>种类: {{ product.ptype }}</p>\r\n                </div>\r\n                <el-button\r\n                  v-if=\"selectedProduct && selectedProduct.productId === product.productId\"\r\n                  type=\"danger\"\r\n                  @click.stop=\"deleteProduct(product)\"\r\n                  class=\"delete-button\"\r\n                >\r\n                  删除\r\n                </el-button>\r\n              </el-card>\r\n            </el-col>\r\n          </el-row>\r\n        </div>\r\n\r\n        <!-- 访客记录 -->\r\n        <div v-if=\"activeView === 'visitorRecords'\">\r\n    <h2>访客记录</h2>\r\n    <el-table :data=\"visitorRecords\" style=\"width: 100%\">\r\n      <el-table-column prop=\"productImage\" label=\"商品图片\" width=\"180\" align=\"center\" header-align=\"center\">\r\n        <template v-slot=\"{ row }\">\r\n          <img :src=\"row.productImage\" alt=\"商品图片\" style=\"width: 100px; height: 100px; object-fit: cover;\">\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"productName\" label=\"商品名称\" width=\"180\" align=\"center\" header-align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"productPrice\" label=\"商品价格\" width=\"180\" align=\"center\" header-align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"visitorId\" label=\"访问用户\" width=\"180\" header-align=\"center\"></el-table-column>\r\n      <el-table-column prop=\"visitTime\" label=\"访问时间\" width=\"180\" align=\"center\"></el-table-column>\r\n    </el-table>\r\n  </div>\r\n      </el-main>\r\n    </el-container>\r\n\r\n    <!-- 编辑对话框 -->\r\n    <el-dialog v-model=\"editDialogVisible\" title=\"编辑商品\">\r\n      <el-form :model=\"editProductForm\">\r\n        <el-form-item label=\"名称\">\r\n          <el-input v-model=\"editProductForm.pname\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\">\r\n          <el-input v-model=\"editProductForm.pdes\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"价格\">\r\n          <el-input v-model=\"editProductForm.ppri\" type=\"number\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"库存\">\r\n          <el-input v-model=\"editProductForm.pcount\" type=\"number\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"种类\">\r\n          <el-input v-model=\"editProductForm.ptype\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template v-slot:footer>\r\n        <div class=\"dialog-footer\">\r\n          <el-button @click=\"editDialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"updateProduct\">保存</el-button>\r\n        </div>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- 新增商品对话框 -->\r\n    <el-dialog v-model=\"addDialogVisible\" title=\"新增商品\">\r\n      <el-form :model=\"newProductForm\">\r\n        <el-form-item label=\"图片链接\">\r\n          <el-input v-model=\"newProductForm.purl\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"名称\">\r\n          <el-input v-model=\"newProductForm.pname\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\">\r\n          <el-input v-model=\"newProductForm.pdes\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"价格\">\r\n          <el-input v-model=\"newProductForm.ppri\" type=\"number\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"库存\">\r\n          <el-input v-model=\"newProductForm.pcount\" type=\"number\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"种类\">\r\n          <el-select v-model=\"newProductForm.ptype\" placeholder=\"请选择种类\">\r\n            <el-option label=\"家居日用\" value=\"家居日用\"></el-option>\r\n            <el-option label=\"穿搭服饰\" value=\"穿搭服饰\"></el-option>\r\n            <el-option label=\"米面粮油\" value=\"米面粮油\"></el-option>\r\n            <el-option label=\"生鲜水果\" value=\"生鲜水果\"></el-option>\r\n            <el-option label=\"科技数码\" value=\"科技数码\"></el-option>\r\n            <el-option label=\"运动户外\" value=\"运动户外\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template v-slot:footer>\r\n        <div class=\"dialog-footer\">\r\n          <el-button @click=\"addDialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"addProduct\">添加</el-button>\r\n        </div>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, nextTick } from 'vue';\r\nimport axios from 'axios';\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n  name: 'MerchantDashboard',\r\n  setup() {\r\n    const activeView = ref('orders');\r\n    const orderDetails = ref([]);\r\n    const products = ref([]);\r\n    const visitorRecords = ref([]);\r\n    const selectedProduct = ref(null);\r\n    const chartRef = ref(null);\r\n    let chartInstance = null;\r\n    const formatPath = (path) => path.replace(/\\\\/g, '/');\r\n\r\n    const editDialogVisible = ref(false);\r\n    const addDialogVisible = ref(false);\r\n    const editProductForm = ref({\r\n      pname: '',\r\n      pdes: '',\r\n      ppri: 0,\r\n      pcount: 0,\r\n      ptype: '',\r\n      productId: null,\r\n    });\r\n\r\n    const newProductForm = ref({\r\n      purl: '',\r\n      pname: '',\r\n      pdes: '',\r\n      ppri: 0,\r\n      pcount: 0,\r\n      ptype: '',\r\n    });\r\n\r\n    const jwt = sessionStorage.getItem('jwt');\r\n    if (jwt) {\r\n      axios.defaults.headers.common['Authorization'] = `${jwt}`;\r\n    }\r\n\r\n    const showOrders = () => {\r\n      activeView.value = 'orders';\r\n      updateChart();\r\n    };\r\n\r\n    const showProducts = () => {\r\n      activeView.value = 'products';\r\n      fetchProducts();\r\n    };\r\n\r\n    const showVisitorRecords = () => {\r\n      activeView.value = 'visitorRecords';\r\n      fetchVisitorRecords();\r\n    };\r\n\r\n    const fetchOrderDetails = async () => {\r\n      try {\r\n        const uid = sessionStorage.getItem('uid');\r\n        if (!uid) {\r\n          console.error('用户ID未找到');\r\n          return;\r\n        }\r\n\r\n        const response = await axios.get('/eShop/orders/getordersbysaler', {\r\n          params: { uid },\r\n        });\r\n\r\n        if (response.status !== 200) {\r\n          console.error('请求失败，状态码:', response.status);\r\n          return;\r\n        }\r\n\r\n        const orderDetailsList = response.data.data;\r\n        console.log('订单详情数据:', orderDetailsList);\r\n\r\n        if (!Array.isArray(orderDetailsList)) {\r\n          console.error('订单详情数据不是数组:', orderDetailsList);\r\n          return;\r\n        }\r\n\r\n        const ordersPromises = orderDetailsList.map(async (orderDetail) => {\r\n          try {\r\n            const orderResponse = await axios.post('/eShop/orders/getorderbyorderdetail', {\r\n              oid: orderDetail.oid,\r\n            });\r\n\r\n            if (orderResponse.status !== 200) {\r\n              console.error('获取订单信息失败，状态码:', orderResponse.status);\r\n              return null;\r\n            }\r\n\r\n            const order = orderResponse.data.data;\r\n            const [name, email, address] = order.address.split(' ');\r\n            const orderTime = new Date(parseInt(order.otime)).toISOString().split('T')[0];\r\n\r\n            const productResponse = await axios.get('/eShop/product/getproductbyid', {\r\n              params: { pid: orderDetail.pid },\r\n            });\r\n\r\n            if (productResponse.status !== 200) {\r\n              console.error('获取商品信息失败，状态码:', productResponse.status);\r\n              return null;\r\n            }\r\n\r\n            const productName = productResponse.data.data.pname;\r\n\r\n            return {\r\n              ...orderDetail,\r\n              customerName: name,\r\n              customerEmail: email,\r\n              customerAddress: address,\r\n              orderTime,\r\n              productName,\r\n              productQuantity: orderDetail.odPCount,\r\n              odPMoney: parseFloat(orderDetail.odPMoney)\r\n            };\r\n          } catch (error) {\r\n            console.error('获取订单信息时出错:', error);\r\n            return null;\r\n          }\r\n        });\r\n\r\n        orderDetails.value = (await Promise.all(ordersPromises)).filter(item => item !== null);\r\n        console.log(orderDetails.value);\r\n\r\n        updateChart();\r\n      } catch (error) {\r\n        console.error('获取订单详情失败:', error);\r\n      }\r\n    };\r\n\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const uid = sessionStorage.getItem('uid');\r\n        if (!uid) {\r\n          console.error('用户ID未找到');\r\n          return;\r\n        }\r\n\r\n        const response = await axios.get('/eShop/product/getproductbysaler', {\r\n          params: { uid },\r\n        });\r\n\r\n        if (response.status !== 200) {\r\n          console.error('请求失败，状态码:', response.status);\r\n          return;\r\n        }\r\n\r\n        products.value = response.data.data.map(product => ({\r\n          ...product,\r\n        }));\r\n        console.log('商品数据:', products.value);\r\n      } catch (error) {\r\n        console.error('获取商品信息失败:', error);\r\n      }\r\n    };\r\n\r\n    const fetchVisitorRecords = async () => {\r\n      try {\r\n        const uid = sessionStorage.getItem('uid');\r\n        if (!uid) {\r\n          console.error('用户ID未找到');\r\n          return;\r\n        }\r\n\r\n        const response = await axios.get('/eShop/shopexp/getsalershopexp', {\r\n          params: { uid },\r\n        });\r\n\r\n        if (response.status !== 200) {\r\n          console.error('请求失败，状态码:', response.status);\r\n          return;\r\n        }\r\n\r\n        const shopExpList = response.data.data;\r\n        console.log('访客记录数据:', shopExpList);\r\n\r\n        const recordsPromises = shopExpList.map(async (shopExp) => {\r\n          try {\r\n            const productResponse = await axios.get('/eShop/product/getproductbyid', {\r\n              params: { pid: shopExp.pid },\r\n            });\r\n\r\n            if (productResponse.status !== 200) {\r\n              console.error('获取商品信息失败，状态码:', productResponse.status);\r\n              return null;\r\n            }\r\n\r\n            const product = productResponse.data.data;\r\n            const visitTime = new Date(parseInt(shopExp.seTime)).toLocaleString();\r\n\r\n            return {\r\n              productImage: formatPath(product.purl),\r\n              productName: product.pname,\r\n              productPrice: product.ppri,\r\n              visitorId: shopExp.uid0,\r\n              visitTime,\r\n            };\r\n          } catch (error) {\r\n            console.error('获取商品信息时出错:', error);\r\n            return null;\r\n          }\r\n        });\r\n\r\n        visitorRecords.value = (await Promise.all(recordsPromises)).filter(item => item !== null);\r\n        console.log(visitorRecords.value);\r\n      } catch (error) {\r\n        console.error('获取访客记录失败:', error);\r\n      }\r\n    };\r\n\r\n    const updateChart = async () => {\r\n      await nextTick();\r\n      if (chartInstance) {\r\n        chartInstance.dispose(); // 销毁现有实例\r\n      }\r\n      chartInstance = echarts.init(chartRef.value); // 重新初始化\r\n\r\n      const today = new Date();\r\n      const dates = Array.from({ length: 7 }, (_, i) => {\r\n        const date = new Date(today);\r\n        date.setDate(today.getDate() - i);\r\n        return date.toISOString().split('T')[0];\r\n      }).reverse();\r\n\r\n      const orderAmounts = dates.map(date => {\r\n        const dailyOrders = orderDetails.value.filter(order => order.orderTime.startsWith(date));\r\n        console.log(`Date: ${date}, Orders:`, dailyOrders);\r\n        return dailyOrders.reduce((sum, order) => sum + order.odPMoney, 0);\r\n      });\r\n\r\n      const option = {\r\n        title: {\r\n          text: '订单金额统计',\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: dates,\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n        },\r\n        series: [\r\n          {\r\n            data: orderAmounts,\r\n            type: 'line',\r\n          },\r\n        ],\r\n      };\r\n\r\n      chartInstance.setOption(option);\r\n    };\r\n\r\n    const selectProduct = (product) => {\r\n      selectedProduct.value = product;\r\n    };\r\n\r\n    const editProduct = (product) => {\r\n      editProductForm.value = { ...product };\r\n      editDialogVisible.value = true;\r\n    };\r\n\r\n    const deleteProduct = async (product) => {\r\n      try {\r\n        const response = await axios.post('/eShop/product/deleteproduct', { pid: product.productId });\r\n        if (response.status === 200) {\r\n          console.log('商品删除成功');\r\n          fetchProducts(); // 更新商品列表\r\n          selectedProduct.value = null; // 清除选中状态\r\n        } else {\r\n          console.error('商品删除失败，状态码:', response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error('删除商品时出错:', error);\r\n      }\r\n    };\r\n\r\n    const updateProduct = async () => {\r\n      try {\r\n        const response = await axios.post('/eShop/product/updateproduct', editProductForm.value);\r\n        if (response.status === 200) {\r\n          console.log('商品更新成功');\r\n          editDialogVisible.value = false;\r\n          fetchProducts(); // 更新商品列表\r\n        } else {\r\n          console.error('商品更新失败，状态码:', response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error('更新商品时出错:', error);\r\n      }\r\n    };\r\n\r\n    const openAddProductDialog = () => {\r\n      newProductForm.value = {\r\n        purl: '',\r\n        pname: '',\r\n        pdes: '',\r\n        ppri: 0,\r\n        pcount: 0,\r\n        ptype: '',\r\n      };\r\n      addDialogVisible.value = true;\r\n    };\r\n\r\n    const addProduct = async () => {\r\n      try {\r\n        const uid = sessionStorage.getItem('uid');\r\n        if (!uid) {\r\n          console.error('用户ID未找到');\r\n          return;\r\n        }\r\n\r\n        const response = await axios.post('/eShop/product/addproduct', {\r\n          ...newProductForm.value,\r\n          uid,\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          console.log('商品添加成功');\r\n          addDialogVisible.value = false;\r\n          fetchProducts(); // 更新商品列表\r\n        } else {\r\n          console.error('商品添加失败，状态码:', response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error('添加商品时出错:', error);\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      if (activeView.value === 'orders') {\r\n        fetchOrderDetails();\r\n      }\r\n    });\r\n\r\n    return {\r\n      activeView,\r\n      orderDetails,\r\n      products,\r\n      visitorRecords,\r\n      selectedProduct,\r\n      showOrders,\r\n      showProducts,\r\n      showVisitorRecords,\r\n      chartRef,\r\n      chartInstance,\r\n      formatPath,\r\n      editDialogVisible,\r\n      addDialogVisible,\r\n      editProductForm,\r\n      newProductForm,\r\n      selectProduct,\r\n      editProduct,\r\n      deleteProduct,\r\n      updateProduct,\r\n      openAddProductDialog,\r\n      addProduct\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.merchant-dashboard {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n}\r\n\r\n.el-container {\r\n  height: 100%;\r\n}\r\n\r\n.el-aside {\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.el-main {\r\n  padding: 20px;\r\n}\r\n\r\n.product-card {\r\n  transition: transform 0.3s, box-shadow 0.3s;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  height: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  position: relative;\r\n}\r\n\r\n.product-card:hover {\r\n  transform: translateY(-10px);\r\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.product-card.selected {\r\n  border: 2px solid #409eff;\r\n}\r\n\r\n.product-image {\r\n  width: 100%;\r\n  height: 200px;\r\n  object-fit: cover;\r\n}\r\n\r\n.product-info {\r\n  padding: 14px;\r\n  text-align: center;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n\r\n.product-info h3 {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n\r\n.product-info p {\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin: 5px 0;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n\r\n.delete-button {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n}\r\n\r\n.visitor-records img {\r\n  width: 100px;\r\n  height: 100px;\r\n  object-fit: cover;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}