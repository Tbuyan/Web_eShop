{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { ref, onMounted } from 'vue';\nimport axios from 'axios';\nexport default {\n  name: 'MerchantDashboard',\n  setup() {\n    const activeView = ref('orders');\n    const orderDetails = ref([]);\n    const products = ref([]);\n    const showOrders = () => {\n      activeView.value = 'orders';\n    };\n    const showProducts = () => {\n      activeView.value = 'products';\n    };\n    const fetchOrderDetails = async () => {\n      try {\n        const uid = localStorage.getItem('uid');\n        if (!uid) {\n          console.error('用户ID未找到');\n          return;\n        }\n\n        // 获取订单详情\n        const {\n          data: orderDetailsList\n        } = await axios.get('eShop/orders/getordersbysaler', {\n          params: {\n            uid\n          }\n        });\n\n        // 获取每个订单的详细信息\n        const ordersPromises = orderDetailsList.map(async orderDetail => {\n          const {\n            data: order\n          } = await axios.post('eShop/orders/getorderbyorderdetail', {\n            oid: orderDetail.oid\n          });\n          const [name, email, address] = order.address.split(' ');\n          const orderTime = new Date(order.o_time).toLocaleString('zh-CN', {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric',\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit'\n          });\n          return {\n            ...orderDetail,\n            customerName: name,\n            customerEmail: email,\n            customerAddress: address,\n            orderTime\n          };\n        });\n        orderDetails.value = await Promise.all(ordersPromises);\n      } catch (error) {\n        console.error('获取订单详情失败', error);\n      }\n    };\n    onMounted(() => {\n      const jwt = localStorage.getItem('jwt');\n      if (jwt) {\n        axios.defaults.headers.common['Authorization'] = `${jwt}`;\n      }\n      if (activeView.value === 'orders') {\n        fetchOrderDetails();\n      }\n    });\n    return {\n      activeView,\n      orderDetails,\n      products,\n      showOrders,\n      showProducts\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","name","setup","activeView","orderDetails","products","showOrders","value","showProducts","fetchOrderDetails","uid","localStorage","getItem","console","error","data","orderDetailsList","get","params","ordersPromises","map","orderDetail","order","post","oid","email","address","split","orderTime","Date","o_time","toLocaleString","year","month","day","hour","minute","second","customerName","customerEmail","customerAddress","Promise","all","jwt","defaults","headers","common"],"sources":["E:\\Vue\\jsproject\\shop\\src\\views\\MerchantPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"merchant-dashboard\">\r\n      <el-container>\r\n        <!-- 侧边栏 -->\r\n        <el-aside width=\"200px\">\r\n          <el-menu default-active=\"1\" class=\"el-menu-vertical-demo\">\r\n            <el-menu-item index=\"1\" @click=\"showOrders\">\r\n              <template v-slot:title>\r\n                <i class=\"el-icon-s-order\"></i>\r\n                <span>订单管理</span>\r\n              </template>\r\n            </el-menu-item>\r\n            <el-menu-item index=\"2\" @click=\"showProducts\">\r\n              <template v-slot:title>\r\n                <i class=\"el-icon-goods\"></i>\r\n                <span>我的商品</span>\r\n              </template>\r\n            </el-menu-item>\r\n          </el-menu>\r\n        </el-aside>\r\n  \r\n        <!-- 主内容区 -->\r\n        <el-main>\r\n          <!-- 订单展示 -->\r\n          <div v-if=\"activeView === 'orders'\">\r\n            <h2>订单管理</h2>\r\n            <el-table :data=\"orderDetails\" style=\"width: 100%\">\r\n              <el-table-column prop=\"oid\" label=\"订单号\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"customerName\" label=\"客户姓名\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"customerEmail\" label=\"客户邮箱\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"customerAddress\" label=\"客户地址\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"odPMoney\" label=\"订单金额\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"orderTime\" label=\"订单时间\" width=\"180\"></el-table-column>\r\n            </el-table>\r\n          </div>\r\n  \r\n          <!-- 商品管理 -->\r\n          <div v-if=\"activeView === 'products'\">\r\n            <h2>商品管理</h2>\r\n            <!-- 商品管理内容 -->\r\n            <el-table :data=\"products\" style=\"width: 100%\">\r\n              <el-table-column prop=\"productId\" label=\"商品ID\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"productName\" label=\"商品名称\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"productPrice\" label=\"商品价格\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"productStock\" label=\"库存\" width=\"180\"></el-table-column>\r\n            </el-table>\r\n          </div>\r\n        </el-main>\r\n      </el-container>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, onMounted } from 'vue';\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: 'MerchantDashboard',\r\n    setup() {\r\n      const activeView = ref('orders');\r\n      const orderDetails = ref([]);\r\n      const products = ref([]);\r\n  \r\n      const showOrders = () => {\r\n        activeView.value = 'orders';\r\n      };\r\n  \r\n      const showProducts = () => {\r\n        activeView.value = 'products';\r\n      };\r\n  \r\n      const fetchOrderDetails = async () => {\r\n        try {\r\n          const uid = localStorage.getItem('uid');\r\n          if (!uid) {\r\n            console.error('用户ID未找到');\r\n            return;\r\n          }\r\n  \r\n          // 获取订单详情\r\n          const { data: orderDetailsList } = await axios.get('eShop/orders/getordersbysaler', {\r\n            params: { uid },\r\n          });\r\n  \r\n          // 获取每个订单的详细信息\r\n          const ordersPromises = orderDetailsList.map(async (orderDetail) => {\r\n            const { data: order } = await axios.post('eShop/orders/getorderbyorderdetail', {\r\n              oid: orderDetail.oid,\r\n            });\r\n  \r\n            const [name, email, address] = order.address.split(' ');\r\n            const orderTime = new Date(order.o_time).toLocaleString('zh-CN', {\r\n              year: 'numeric',\r\n              month: 'long',\r\n              day: 'numeric',\r\n              hour: '2-digit',\r\n              minute: '2-digit',\r\n              second: '2-digit',\r\n            });\r\n  \r\n            return {\r\n              ...orderDetail,\r\n              customerName: name,\r\n              customerEmail: email,\r\n              customerAddress: address,\r\n              orderTime,\r\n            };\r\n          });\r\n  \r\n          orderDetails.value = await Promise.all(ordersPromises);\r\n        } catch (error) {\r\n          console.error('获取订单详情失败', error);\r\n        }\r\n      };\r\n  \r\n      onMounted(() => {\r\n        const jwt = localStorage.getItem('jwt');\r\n      if (jwt) {\r\n        axios.defaults.headers.common['Authorization'] = `${jwt}`;\r\n      }\r\n        if (activeView.value === 'orders') {\r\n          fetchOrderDetails();\r\n        }\r\n      });\r\n  \r\n      return {\r\n        activeView,\r\n        orderDetails,\r\n        products,\r\n        showOrders,\r\n        showProducts,\r\n      };\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .merchant-dashboard {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100vh;\r\n  }\r\n  \r\n  .el-container {\r\n    height: 100%;\r\n  }\r\n  \r\n  .el-aside {\r\n    background-color: #f5f5f5;\r\n  }\r\n  \r\n  .el-main {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .box-card {\r\n    margin-top: 20px;\r\n  }\r\n  </style>\r\n  "],"mappings":";AAqDE,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,mBAAmB;EACzBC,KAAKA,CAAA,EAAG;IACN,MAAMC,UAAS,GAAIL,GAAG,CAAC,QAAQ,CAAC;IAChC,MAAMM,YAAW,GAAIN,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMO,QAAO,GAAIP,GAAG,CAAC,EAAE,CAAC;IAExB,MAAMQ,UAAS,GAAIA,CAAA,KAAM;MACvBH,UAAU,CAACI,KAAI,GAAI,QAAQ;IAC7B,CAAC;IAED,MAAMC,YAAW,GAAIA,CAAA,KAAM;MACzBL,UAAU,CAACI,KAAI,GAAI,UAAU;IAC/B,CAAC;IAED,MAAME,iBAAgB,GAAI,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,GAAE,GAAIC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;QACvC,IAAI,CAACF,GAAG,EAAE;UACRG,OAAO,CAACC,KAAK,CAAC,SAAS,CAAC;UACxB;QACF;;QAEA;QACA,MAAM;UAAEC,IAAI,EAAEC;QAAiB,IAAI,MAAMhB,KAAK,CAACiB,GAAG,CAAC,+BAA+B,EAAE;UAClFC,MAAM,EAAE;YAAER;UAAI;QAChB,CAAC,CAAC;;QAEF;QACA,MAAMS,cAAa,GAAIH,gBAAgB,CAACI,GAAG,CAAC,MAAOC,WAAW,IAAK;UACjE,MAAM;YAAEN,IAAI,EAAEO;UAAM,IAAI,MAAMtB,KAAK,CAACuB,IAAI,CAAC,oCAAoC,EAAE;YAC7EC,GAAG,EAAEH,WAAW,CAACG;UACnB,CAAC,CAAC;UAEF,MAAM,CAACvB,IAAI,EAAEwB,KAAK,EAAEC,OAAO,IAAIJ,KAAK,CAACI,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC;UACvD,MAAMC,SAAQ,GAAI,IAAIC,IAAI,CAACP,KAAK,CAACQ,MAAM,CAAC,CAACC,cAAc,CAAC,OAAO,EAAE;YAC/DC,IAAI,EAAE,SAAS;YACfC,KAAK,EAAE,MAAM;YACbC,GAAG,EAAE,SAAS;YACdC,IAAI,EAAE,SAAS;YACfC,MAAM,EAAE,SAAS;YACjBC,MAAM,EAAE;UACV,CAAC,CAAC;UAEF,OAAO;YACL,GAAGhB,WAAW;YACdiB,YAAY,EAAErC,IAAI;YAClBsC,aAAa,EAAEd,KAAK;YACpBe,eAAe,EAAEd,OAAO;YACxBE;UACF,CAAC;QACH,CAAC,CAAC;QAEFxB,YAAY,CAACG,KAAI,GAAI,MAAMkC,OAAO,CAACC,GAAG,CAACvB,cAAc,CAAC;MACxD,EAAE,OAAOL,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAClC;IACF,CAAC;IAEDf,SAAS,CAAC,MAAM;MACd,MAAM4C,GAAE,GAAIhC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;MACzC,IAAI+B,GAAG,EAAE;QACP3C,KAAK,CAAC4C,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,IAAI,GAAGH,GAAG,EAAE;MAC3D;MACE,IAAIxC,UAAU,CAACI,KAAI,KAAM,QAAQ,EAAE;QACjCE,iBAAiB,CAAC,CAAC;MACrB;IACF,CAAC,CAAC;IAEF,OAAO;MACLN,UAAU;MACVC,YAAY;MACZC,QAAQ;MACRC,UAAU;MACVE;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}