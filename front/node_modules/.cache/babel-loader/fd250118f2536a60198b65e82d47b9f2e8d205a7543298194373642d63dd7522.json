{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withModifiers as _withModifiers, createBlock as _createBlock, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"merchant-dashboard\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  ref: \"chartRef\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"400px\",\n    \"margin-top\": \"20px\"\n  }\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  class: \"product-info\"\n};\nconst _hoisted_7 = {\n  class: \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_menu_item = _resolveComponent(\"el-menu-item\");\n  const _component_el_menu = _resolveComponent(\"el-menu\");\n  const _component_el_aside = _resolveComponent(\"el-aside\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_main = _resolveComponent(\"el-main\");\n  const _component_el_container = _resolveComponent(\"el-container\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_container, null, {\n    default: _withCtx(() => [_createCommentVNode(\" 侧边栏 \"), _createVNode(_component_el_aside, {\n      width: \"200px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_menu, {\n        \"default-active\": \"1\",\n        class: \"el-menu-vertical-demo\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_menu_item, {\n          index: \"1\",\n          onClick: $setup.showOrders\n        }, {\n          title: _withCtx(() => _cache[7] || (_cache[7] = [_createElementVNode(\"i\", {\n            class: \"el-icon-s-order\"\n          }, null, -1 /* HOISTED */), _createElementVNode(\"span\", null, \"订单管理\", -1 /* HOISTED */)])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_menu_item, {\n          index: \"2\",\n          onClick: $setup.showProducts\n        }, {\n          title: _withCtx(() => _cache[8] || (_cache[8] = [_createElementVNode(\"i\", {\n            class: \"el-icon-goods\"\n          }, null, -1 /* HOISTED */), _createElementVNode(\"span\", null, \"我的商品\", -1 /* HOISTED */)])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 主内容区 \"), _createVNode(_component_el_main, null, {\n      default: _withCtx(() => [_createCommentVNode(\" 订单展示 \"), $setup.activeView === 'orders' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[9] || (_cache[9] = _createElementVNode(\"h2\", null, \"订单管理\", -1 /* HOISTED */)), _createVNode(_component_el_table, {\n        data: $setup.orderDetails,\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_table_column, {\n          prop: \"oid\",\n          label: \"订单号\",\n          width: \"180\"\n        }), _createVNode(_component_el_table_column, {\n          prop: \"productName\",\n          label: \"商品名称\",\n          width: \"180\"\n        }), _createVNode(_component_el_table_column, {\n          prop: \"productQuantity\",\n          label: \"商品数量\",\n          width: \"180\"\n        }), _createVNode(_component_el_table_column, {\n          prop: \"customerName\",\n          label: \"客户姓名\",\n          width: \"180\"\n        }), _createVNode(_component_el_table_column, {\n          prop: \"customerEmail\",\n          label: \"客户邮箱\",\n          width: \"180\"\n        }), _createVNode(_component_el_table_column, {\n          prop: \"customerAddress\",\n          label: \"客户地址\",\n          width: \"180\"\n        }), _createVNode(_component_el_table_column, {\n          prop: \"odPMoney\",\n          label: \"订单金额\",\n          width: \"180\"\n        }), _createVNode(_component_el_table_column, {\n          prop: \"orderTime\",\n          label: \"订单时间\",\n          width: \"180\"\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"data\"]), _createCommentVNode(\" 折线图 \"), _createElementVNode(\"div\", _hoisted_3, null, 512 /* NEED_PATCH */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 商品管理 \"), $setup.activeView === 'products' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_cache[11] || (_cache[11] = _createElementVNode(\"h2\", null, \"商品管理\", -1 /* HOISTED */)), _createCommentVNode(\" 商品管理内容 \"), _createVNode(_component_el_row, {\n        gutter: 20\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.products, product => {\n          return _openBlock(), _createBlock(_component_el_col, {\n            span: 8,\n            key: product.productId\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_card, {\n              class: _normalizeClass([\"product-card\", {\n                selected: $setup.selectedProduct && $setup.selectedProduct.productId === product.productId\n              }]),\n              \"body-style\": {\n                padding: '20px'\n              },\n              onDblclick: $event => $setup.editProduct(product),\n              onClick: $event => $setup.selectProduct(product)\n            }, {\n              default: _withCtx(() => [_createElementVNode(\"img\", {\n                src: $setup.formatPath(product.purl),\n                alt: \"商品图片\",\n                class: \"product-image\"\n              }, null, 8 /* PROPS */, _hoisted_5), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"h3\", null, _toDisplayString(product.pname), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(product.pdes), 1 /* TEXT */), _createElementVNode(\"p\", null, \"价格: ¥\" + _toDisplayString(product.ppri), 1 /* TEXT */), _createElementVNode(\"p\", null, \"库存: \" + _toDisplayString(product.pcount), 1 /* TEXT */), _createElementVNode(\"p\", null, \"种类: \" + _toDisplayString(product.ptype), 1 /* TEXT */)]), $setup.selectedProduct && $setup.selectedProduct.productId === product.productId ? (_openBlock(), _createBlock(_component_el_button, {\n                key: 0,\n                type: \"danger\",\n                onClick: _withModifiers($event => $setup.deleteProduct(product), [\"stop\"]),\n                class: \"delete-button\"\n              }, {\n                default: _withCtx(() => [...(_cache[10] || (_cache[10] = [_createTextVNode(\" 删除 \")]))]),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onDblclick\", \"onClick\", \"class\"])]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 1 /* STABLE */\n      })])) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 编辑对话框 \"), _createVNode(_component_el_dialog, {\n    modelValue: $setup.editDialogVisible,\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.editDialogVisible = $event),\n    title: \"编辑商品\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_el_button, {\n      onClick: _cache[5] || (_cache[5] = $event => $setup.editDialogVisible = false)\n    }, {\n      default: _withCtx(() => _cache[12] || (_cache[12] = [_createTextVNode(\"取消\")])),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.updateProduct\n    }, {\n      default: _withCtx(() => _cache[13] || (_cache[13] = [_createTextVNode(\"保存\")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])])]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: $setup.editProductForm\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"名称\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.editProductForm.pname,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.editProductForm.pname = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"描述\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.editProductForm.pdes,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.editProductForm.pdes = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"价格\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.editProductForm.ppri,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.editProductForm.ppri = $event),\n          type: \"number\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"库存\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.editProductForm.pcount,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.editProductForm.pcount = $event),\n          type: \"number\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"种类\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.editProductForm.ptype,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.editProductForm.ptype = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","key","ref","style","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","default","_withCtx","_createCommentVNode","_component_el_aside","width","_component_el_menu","_component_el_menu_item","index","onClick","$setup","showOrders","title","_cache","_createElementVNode","_","showProducts","_component_el_main","activeView","_hoisted_2","_component_el_table","data","orderDetails","_component_el_table_column","prop","label","_hoisted_3","_hoisted_4","_component_el_row","gutter","_Fragment","_renderList","products","product","_createBlock","_component_el_col","span","productId","_component_el_card","_normalizeClass","selected","selectedProduct","padding","onDblclick","$event","editProduct","selectProduct","src","formatPath","purl","alt","_hoisted_5","_hoisted_6","_toDisplayString","pname","pdes","ppri","pcount","ptype","_component_el_button","type","_withModifiers","deleteProduct","_createTextVNode","_component_el_dialog","modelValue","editDialogVisible","footer","_hoisted_7","updateProduct","_component_el_form","model","editProductForm","_component_el_form_item","_component_el_input"],"sources":["E:\\Vue\\jsproject\\shop\\src\\views\\MerchantPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"merchant-dashboard\">\r\n      <el-container>\r\n        <!-- 侧边栏 -->\r\n        <el-aside width=\"200px\">\r\n          <el-menu default-active=\"1\" class=\"el-menu-vertical-demo\">\r\n            <el-menu-item index=\"1\" @click=\"showOrders\">\r\n              <template v-slot:title>\r\n                <i class=\"el-icon-s-order\"></i>\r\n                <span>订单管理</span>\r\n              </template>\r\n            </el-menu-item>\r\n            <el-menu-item index=\"2\" @click=\"showProducts\">\r\n              <template v-slot:title>\r\n                <i class=\"el-icon-goods\"></i>\r\n                <span>我的商品</span>\r\n              </template>\r\n            </el-menu-item>\r\n          </el-menu>\r\n        </el-aside>\r\n  \r\n        <!-- 主内容区 -->\r\n        <el-main>\r\n          <!-- 订单展示 -->\r\n          <div v-if=\"activeView === 'orders'\">\r\n            <h2>订单管理</h2>\r\n            <el-table :data=\"orderDetails\" style=\"width: 100%\">\r\n              <el-table-column prop=\"oid\" label=\"订单号\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"productName\" label=\"商品名称\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"productQuantity\" label=\"商品数量\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"customerName\" label=\"客户姓名\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"customerEmail\" label=\"客户邮箱\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"customerAddress\" label=\"客户地址\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"odPMoney\" label=\"订单金额\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"orderTime\" label=\"订单时间\" width=\"180\"></el-table-column>\r\n            </el-table>\r\n  \r\n            <!-- 折线图 -->\r\n            <div ref=\"chartRef\" style=\"width: 100%; height: 400px; margin-top: 20px;\"></div>\r\n          </div>\r\n  \r\n          <!-- 商品管理 -->\r\n          <div v-if=\"activeView === 'products'\">\r\n            <h2>商品管理</h2>\r\n            <!-- 商品管理内容 -->\r\n            <el-row :gutter=\"20\">\r\n              <el-col :span=\"8\" v-for=\"product in products\" :key=\"product.productId\">\r\n                <el-card\r\n                  class=\"product-card\"\r\n                  :body-style=\"{ padding: '20px' }\"\r\n                  @dblclick=\"editProduct(product)\"\r\n                  @click=\"selectProduct(product)\"\r\n                  :class=\"{ selected: selectedProduct && selectedProduct.productId === product.productId }\"\r\n                >\r\n                  <img :src=\"formatPath(product.purl)\" alt=\"商品图片\" class=\"product-image\">\r\n                  <div class=\"product-info\">\r\n                    <h3>{{ product.pname }}</h3>\r\n                    <p>{{ product.pdes }}</p>\r\n                    <p>价格: ¥{{ product.ppri }}</p>\r\n                    <p>库存: {{ product.pcount }}</p>\r\n                    <p>种类: {{ product.ptype }}</p>\r\n                  </div>\r\n                  <el-button\r\n                    v-if=\"selectedProduct && selectedProduct.productId === product.productId\"\r\n                    type=\"danger\"\r\n                    @click.stop=\"deleteProduct(product)\"\r\n                    class=\"delete-button\"\r\n                  >\r\n                    删除\r\n                  </el-button>\r\n                </el-card>\r\n              </el-col>\r\n            </el-row>\r\n          </div>\r\n        </el-main>\r\n      </el-container>\r\n  \r\n      <!-- 编辑对话框 -->\r\n      <el-dialog v-model=\"editDialogVisible\" title=\"编辑商品\">\r\n        <el-form :model=\"editProductForm\">\r\n          <el-form-item label=\"名称\">\r\n            <el-input v-model=\"editProductForm.pname\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"描述\">\r\n            <el-input v-model=\"editProductForm.pdes\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"价格\">\r\n            <el-input v-model=\"editProductForm.ppri\" type=\"number\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"库存\">\r\n            <el-input v-model=\"editProductForm.pcount\" type=\"number\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"种类\">\r\n            <el-input v-model=\"editProductForm.ptype\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <template v-slot:footer>\r\n          <div class=\"dialog-footer\">\r\n            <el-button @click=\"editDialogVisible = false\">取消</el-button>\r\n            <el-button type=\"primary\" @click=\"updateProduct\">保存</el-button>\r\n          </div>\r\n        </template>\r\n      </el-dialog>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, onMounted, nextTick } from 'vue';\r\n  import axios from 'axios';\r\n  import * as echarts from 'echarts';\r\n  \r\n  export default {\r\n    name: 'MerchantDashboard',\r\n    setup() {\r\n      const activeView = ref('orders');\r\n      const orderDetails = ref([]);\r\n      const products = ref([]);\r\n      const selectedProduct = ref(null);\r\n      const chartRef = ref(null);\r\n      let chartInstance = null;\r\n      const formatPath = (path) => path.replace(/\\\\/g, '/');\r\n  \r\n      const editDialogVisible = ref(false);\r\n      const editProductForm = ref({\r\n        pname: '',\r\n        pdes: '',\r\n        ppri: 0,\r\n        pcount: 0,\r\n        ptype: '',\r\n        productId: null,\r\n      });\r\n  \r\n      const jwt = localStorage.getItem('jwt');\r\n      if (jwt) {\r\n        axios.defaults.headers.common['Authorization'] = `${jwt}`;\r\n      }\r\n  \r\n      const showOrders = () => {\r\n        activeView.value = 'orders';\r\n      };\r\n  \r\n      const showProducts = () => {\r\n        activeView.value = 'products';\r\n        fetchProducts();\r\n      };\r\n  \r\n      const fetchOrderDetails = async () => {\r\n        try {\r\n          const uid = localStorage.getItem('uid');\r\n          if (!uid) {\r\n            console.error('用户ID未找到');\r\n            return;\r\n          }\r\n  \r\n          const response = await axios.get('/eShop/orders/getordersbysaler', {\r\n            params: { uid },\r\n          });\r\n  \r\n          if (response.status !== 200) {\r\n            console.error('请求失败，状态码:', response.status);\r\n            return;\r\n          }\r\n  \r\n          const orderDetailsList = response.data.data;\r\n          console.log('订单详情数据:', orderDetailsList);\r\n  \r\n          if (!Array.isArray(orderDetailsList)) {\r\n            console.error('订单详情数据不是数组:', orderDetailsList);\r\n            return;\r\n          }\r\n  \r\n          const ordersPromises = orderDetailsList.map(async (orderDetail) => {\r\n            try {\r\n              const orderResponse = await axios.post('/eShop/orders/getorderbyorderdetail', {\r\n                oid: orderDetail.oid,\r\n              });\r\n  \r\n              if (orderResponse.status !== 200) {\r\n                console.error('获取订单信息失败，状态码:', orderResponse.status);\r\n                return null;\r\n              }\r\n  \r\n              const order = orderResponse.data.data;\r\n              const [name, email, address] = order.address.split(' ');\r\n              const orderTime = new Date(parseInt(order.otime)).toISOString().split('T')[0];\r\n  \r\n              const productResponse = await axios.get('/eShop/product/getproductbyid', {\r\n                params: { pid: orderDetail.pid },\r\n              });\r\n  \r\n              if (productResponse.status !== 200) {\r\n                console.error('获取商品信息失败，状态码:', productResponse.status);\r\n                return null;\r\n              }\r\n  \r\n              const productName = productResponse.data.data.pname;\r\n  \r\n              return {\r\n                ...orderDetail,\r\n                customerName: name,\r\n                customerEmail: email,\r\n                customerAddress: address,\r\n                orderTime,\r\n                productName,\r\n                productQuantity: orderDetail.odPCount,\r\n                odPMoney: parseFloat(orderDetail.odPMoney)\r\n              };\r\n            } catch (error) {\r\n              console.error('获取订单信息时出错:', error);\r\n              return null;\r\n            }\r\n          });\r\n  \r\n          orderDetails.value = (await Promise.all(ordersPromises)).filter(item => item !== null);\r\n          console.log(orderDetails.value);\r\n  \r\n          updateChart();\r\n        } catch (error) {\r\n          console.error('获取订单详情失败:', error);\r\n        }\r\n      };\r\n  \r\n      const fetchProducts = async () => {\r\n        try {\r\n          const uid = localStorage.getItem('uid');\r\n          if (!uid) {\r\n            console.error('用户ID未找到');\r\n            return;\r\n          }\r\n  \r\n          const response = await axios.get('/eShop/product/getproductbysaler', {\r\n            params: { uid },\r\n          });\r\n  \r\n          if (response.status !== 200) {\r\n            console.error('请求失败，状态码:', response.status);\r\n            return;\r\n          }\r\n  \r\n          products.value = response.data.data.map(product => ({\r\n            ...product,\r\n          }));\r\n          console.log('商品数据:', products.value);\r\n        } catch (error) {\r\n          console.error('获取商品信息失败:', error);\r\n        }\r\n      };\r\n  \r\n      const updateChart = async () => {\r\n        await nextTick();\r\n        if (!chartInstance) {\r\n          chartInstance = echarts.init(chartRef.value);\r\n        }\r\n  \r\n        const today = new Date();\r\n        const dates = Array.from({ length: 7 }, (_, i) => {\r\n          const date = new Date(today);\r\n          date.setDate(today.getDate() - i);\r\n          return date.toISOString().split('T')[0];\r\n        }).reverse();\r\n  \r\n        const orderAmounts = dates.map(date => {\r\n          const dailyOrders = orderDetails.value.filter(order => order.orderTime.startsWith(date));\r\n          console.log(`Date: ${date}, Orders:`, dailyOrders);\r\n          return dailyOrders.reduce((sum, order) => sum + order.odPMoney, 0);\r\n        });\r\n  \r\n        const option = {\r\n          title: {\r\n            text: '订单金额统计',\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            data: dates,\r\n          },\r\n          yAxis: {\r\n            type: 'value',\r\n          },\r\n          series: [\r\n            {\r\n              data: orderAmounts,\r\n              type: 'line',\r\n            },\r\n          ],\r\n        };\r\n  \r\n        chartInstance.setOption(option);\r\n      };\r\n  \r\n      const selectProduct = (product) => {\r\n        selectedProduct.value = product;\r\n      };\r\n  \r\n      const editProduct = (product) => {\r\n        editProductForm.value = { ...product };\r\n        editDialogVisible.value = true;\r\n      };\r\n  \r\n      const deleteProduct = async (product) => {\r\n        try {\r\n          const response = await axios.post('/eShop/product/deleteproduct', { pid: product.productId });\r\n          if (response.status === 200) {\r\n            console.log('商品删除成功');\r\n            fetchProducts(); // 更新商品列表\r\n            selectedProduct.value = null; // 清除选中状态\r\n          } else {\r\n            console.error('商品删除失败，状态码:', response.status);\r\n          }\r\n        } catch (error) {\r\n          console.error('删除商品时出错:', error);\r\n        }\r\n      };\r\n  \r\n      const updateProduct = async () => {\r\n        try {\r\n          const response = await axios.post('/eShop/product/updateproduct', editProductForm.value);\r\n          if (response.status === 200) {\r\n            console.log('商品更新成功');\r\n            editDialogVisible.value = false;\r\n            fetchProducts(); // 更新商品列表\r\n          } else {\r\n            console.error('商品更新失败，状态码:', response.status);\r\n          }\r\n        } catch (error) {\r\n          console.error('更新商品时出错:', error);\r\n        }\r\n      };\r\n  \r\n      onMounted(() => {\r\n        if (activeView.value === 'orders') {\r\n          fetchOrderDetails();\r\n        }\r\n      });\r\n  \r\n      return {\r\n        activeView,\r\n        orderDetails,\r\n        products,\r\n        selectedProduct,\r\n        showOrders,\r\n        showProducts,\r\n        chartRef,\r\n        chartInstance,\r\n        formatPath,\r\n        editDialogVisible,\r\n        editProductForm,\r\n        selectProduct,\r\n        editProduct,\r\n        deleteProduct,\r\n        updateProduct\r\n      };\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .merchant-dashboard {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100vh;\r\n  }\r\n  \r\n  .el-container {\r\n    height: 100%;\r\n  }\r\n  \r\n  .el-aside {\r\n    background-color: #f5f5f5;\r\n  }\r\n  \r\n  .el-main {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .product-card {\r\n    transition: transform 0.3s, box-shadow 0.3s;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n    height: 400px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    position: relative;\r\n  }\r\n  \r\n  .product-card:hover {\r\n    transform: translateY(-10px);\r\n    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\r\n  }\r\n  \r\n  .product-card.selected {\r\n    border: 2px solid #409eff;\r\n  }\r\n  \r\n  .product-image {\r\n    width: 100%;\r\n    height: 200px;\r\n    object-fit: cover;\r\n  }\r\n  \r\n  .product-info {\r\n    padding: 14px;\r\n    text-align: center;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n  \r\n  .product-info h3 {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    margin-bottom: 10px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n  \r\n  .product-info p {\r\n    font-size: 14px;\r\n    color: #666;\r\n    margin: 5px 0;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n  \r\n  .delete-button {\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}