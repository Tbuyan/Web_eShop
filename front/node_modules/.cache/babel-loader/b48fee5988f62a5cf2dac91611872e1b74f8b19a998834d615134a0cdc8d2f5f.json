{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"merchant-dashboard\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  ref: \"chart\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"400px\",\n    \"margin-top\": \"20px\"\n  }\n};\nconst _hoisted_4 = {\n  key: 1\n};\nexport function render(_ctx, _cache) {\n  const _component_el_menu_item = _resolveComponent(\"el-menu-item\");\n  const _component_el_menu = _resolveComponent(\"el-menu\");\n  const _component_el_aside = _resolveComponent(\"el-aside\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_main = _resolveComponent(\"el-main\");\n  const _component_el_container = _resolveComponent(\"el-container\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_container, null, {\n    default: _withCtx(() => [_createCommentVNode(\" 侧边栏 \"), _createVNode(_component_el_aside, {\n      width: \"200px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_menu, {\n        \"default-active\": \"1\",\n        class: \"el-menu-vertical-demo\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_menu_item, {\n          index: \"1\",\n          onClick: _ctx.showOrders\n        }, {\n          title: _withCtx(() => _cache[0] || (_cache[0] = [_createElementVNode(\"i\", {\n            class: \"el-icon-s-order\"\n          }, null, -1 /* HOISTED */), _createElementVNode(\"span\", null, \"订单管理\", -1 /* HOISTED */)])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_menu_item, {\n          index: \"2\",\n          onClick: _ctx.showProducts\n        }, {\n          title: _withCtx(() => _cache[1] || (_cache[1] = [_createElementVNode(\"i\", {\n            class: \"el-icon-goods\"\n          }, null, -1 /* HOISTED */), _createElementVNode(\"span\", null, \"我的商品\", -1 /* HOISTED */)])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 主内容区 \"), _createVNode(_component_el_main, null, {\n      default: _withCtx(() => [_createCommentVNode(\" 订单展示 \"), _ctx.activeView === 'orders' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"订单管理\", -1 /* HOISTED */)), _createVNode(_component_el_table, {\n        data: _ctx.orderDetails,\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_table_column, {\n          prop: \"oid\",\n          label: \"订单号\",\n          width: \"180\"\n        }), _createVNode(_component_el_table_column, {\n          prop: \"productName\",\n          label: \"商品名称\",\n          width: \"180\"\n        }), _createVNode(_component_el_table_column, {\n          prop: \"productQuantity\",\n          label: \"商品数量\",\n          width: \"180\"\n        }), _createVNode(_component_el_table_column, {\n          prop: \"customerName\",\n          label: \"客户姓名\",\n          width: \"180\"\n        }), _createVNode(_component_el_table_column, {\n          prop: \"customerEmail\",\n          label: \"客户邮箱\",\n          width: \"180\"\n        }), _createVNode(_component_el_table_column, {\n          prop: \"customerAddress\",\n          label: \"客户地址\",\n          width: \"180\"\n        }), _createVNode(_component_el_table_column, {\n          prop: \"odPMoney\",\n          label: \"订单金额\",\n          width: \"180\"\n        }), _createVNode(_component_el_table_column, {\n          prop: \"orderTime\",\n          label: \"订单时间\",\n          width: \"180\"\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"data\"]), _createCommentVNode(\" 折线图 \"), _createElementVNode(\"div\", _hoisted_3, null, 512 /* NEED_PATCH */)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 商品管理 \"), _ctx.activeView === 'products' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"商品管理\", -1 /* HOISTED */)), _createCommentVNode(\" 商品管理内容 \"), _createVNode(_component_el_table, {\n        data: _ctx.products,\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_table_column, {\n          prop: \"productId\",\n          label: \"商品ID\",\n          width: \"180\"\n        }), _createVNode(_component_el_table_column, {\n          prop: \"productName\",\n          label: \"商品名称\",\n          width: \"180\"\n        }), _createVNode(_component_el_table_column, {\n          prop: \"productPrice\",\n          label: \"商品价格\",\n          width: \"180\"\n        }), _createVNode(_component_el_table_column, {\n          prop: \"productStock\",\n          label: \"库存\",\n          width: \"180\"\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"data\"])])) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","key","ref","style","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","default","_withCtx","_createCommentVNode","_component_el_aside","width","_component_el_menu","_component_el_menu_item","index","onClick","_ctx","showOrders","title","_cache","_createElementVNode","_","showProducts","_component_el_main","activeView","_hoisted_2","_component_el_table","data","orderDetails","_component_el_table_column","prop","label","_hoisted_3","_hoisted_4","products"],"sources":["E:\\Vue\\jsproject\\shop\\src\\views\\MerchantPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"merchant-dashboard\">\r\n      <el-container>\r\n        <!-- 侧边栏 -->\r\n        <el-aside width=\"200px\">\r\n          <el-menu default-active=\"1\" class=\"el-menu-vertical-demo\">\r\n            <el-menu-item index=\"1\" @click=\"showOrders\">\r\n              <template v-slot:title>\r\n                <i class=\"el-icon-s-order\"></i>\r\n                <span>订单管理</span>\r\n              </template>\r\n            </el-menu-item>\r\n            <el-menu-item index=\"2\" @click=\"showProducts\">\r\n              <template v-slot:title>\r\n                <i class=\"el-icon-goods\"></i>\r\n                <span>我的商品</span>\r\n              </template>\r\n            </el-menu-item>\r\n          </el-menu>\r\n        </el-aside>\r\n  \r\n        <!-- 主内容区 -->\r\n        <el-main>\r\n          <!-- 订单展示 -->\r\n          <div v-if=\"activeView === 'orders'\">\r\n            <h2>订单管理</h2>\r\n            <el-table :data=\"orderDetails\" style=\"width: 100%\">\r\n              <el-table-column prop=\"oid\" label=\"订单号\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"productName\" label=\"商品名称\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"productQuantity\" label=\"商品数量\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"customerName\" label=\"客户姓名\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"customerEmail\" label=\"客户邮箱\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"customerAddress\" label=\"客户地址\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"odPMoney\" label=\"订单金额\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"orderTime\" label=\"订单时间\" width=\"180\"></el-table-column>\r\n            </el-table>\r\n  \r\n            <!-- 折线图 -->\r\n            <div ref=\"chart\" style=\"width: 100%; height: 400px; margin-top: 20px;\"></div>\r\n          </div>\r\n  \r\n          <!-- 商品管理 -->\r\n          <div v-if=\"activeView === 'products'\">\r\n            <h2>商品管理</h2>\r\n            <!-- 商品管理内容 -->\r\n            <el-table :data=\"products\" style=\"width: 100%\">\r\n              <el-table-column prop=\"productId\" label=\"商品ID\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"productName\" label=\"商品名称\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"productPrice\" label=\"商品价格\" width=\"180\"></el-table-column>\r\n              <el-table-column prop=\"productStock\" label=\"库存\" width=\"180\"></el-table-column>\r\n            </el-table>\r\n          </div>\r\n        </el-main>\r\n      </el-container>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, onMounted, nextTick } from 'vue';\r\n  import axios from 'axios';\r\n  import * as echarts from 'echarts';\r\n  \r\n  export default {\r\n    name: 'MerchantDashboard',\r\n    setup() {\r\n      const activeView = ref('orders');\r\n      const orderDetails = ref([]);\r\n      const products = ref([]);\r\n      const chartRef = ref(null);\r\n      let chartInstance = null; // 使用普通变量来存储 ECharts 实例\r\n  \r\n      // 设置 Axios 默认请求头\r\n      const jwt = localStorage.getItem('jwt');\r\n      if (jwt) {\r\n        axios.defaults.headers.common['Authorization'] = `${jwt}`;\r\n      }\r\n  \r\n      const showOrders = () => {\r\n        activeView.value = 'orders';\r\n      };\r\n  \r\n      const showProducts = () => {\r\n        activeView.value = 'products';\r\n      };\r\n  \r\n      const fetchOrderDetails = async () => {\r\n        \r\n        try {\r\n          const uid = localStorage.getItem('uid');\r\n          if (!uid) {\r\n            console.error('用户ID未找到');\r\n            return;\r\n          }\r\n  \r\n          // 获取订单详情\r\n          const response = await axios.get('/eShop/orders/getordersbysaler', {\r\n            params: { uid },\r\n          });\r\n  \r\n          if (response.status !== 200) {\r\n            console.error('请求失败，状态码:', response.status);\r\n            return;\r\n          }\r\n  \r\n          const orderDetailsList = response.data.data; // 从 data 中提取订单详情列表\r\n          console.log('订单详情数据:', orderDetailsList);\r\n  \r\n          // 检查 orderDetailsList 是否为数组\r\n          if (!Array.isArray(orderDetailsList)) {\r\n            console.error('订单详情数据不是数组:', orderDetailsList);\r\n            return;\r\n          }\r\n  \r\n          // 获取每个订单的详细信息\r\n          const ordersPromises = orderDetailsList.map(async (orderDetail) => {\r\n            try {\r\n              const orderResponse = await axios.post('/eShop/orders/getorderbyorderdetail', {\r\n                oid: orderDetail.oid,\r\n              });\r\n  \r\n              if (orderResponse.status !== 200) {\r\n                console.error('获取订单信息失败，状态码:', orderResponse.status);\r\n                return null;\r\n              }\r\n  \r\n              const order = orderResponse.data.data; // 确保从 data 中提取订单信息\r\n              const [name, email, address] = order.address.split(' ');\r\n              const orderTime = new Date(parseInt(order.otime)).toLocaleString('zh-CN', {\r\n                year: 'numeric',\r\n                month: 'long',\r\n                day: 'numeric',\r\n                hour: '2-digit',\r\n                minute: '2-digit',\r\n                second: '2-digit',\r\n              });\r\n  \r\n              // 获取商品名称\r\n              const productResponse = await axios.get('/eShop/product/getproductbyid', {\r\n                params: { pid: orderDetail.pid },\r\n              });\r\n  \r\n              if (productResponse.status !== 200) {\r\n                console.error('获取商品信息失败，状态码:', productResponse.status);\r\n                return null;\r\n              }\r\n  \r\n              const productName = productResponse.data.data.pname;\r\n  \r\n              return {\r\n                ...orderDetail,\r\n                customerName: name,\r\n                customerEmail: email,\r\n                customerAddress: address,\r\n                orderTime,\r\n                productName,\r\n                productQuantity: orderDetail.odPCount, // 假设 orderDetail 中有 quantity 字段\r\n              };\r\n            } catch (error) {\r\n              console.error('获取订单信息时出错:', error);\r\n              return null;\r\n            }\r\n          });\r\n  \r\n          orderDetails.value = (await Promise.all(ordersPromises)).filter(item => item !== null);// 在数据获取后更新图表\r\n          console.\r\n          await nextTick();\r\n          updateChart();\r\n  \r\n  \r\n        } catch (error) {\r\n          console.error('获取订单详情失败:', error);\r\n        }\r\n  \r\n      };\r\n  \r\n      const updateChart = () => {\r\n        if (!chartInstance) {\r\n          chartInstance = echarts.init(chartRef.value); // 初始化 ECharts 实例\r\n        }\r\n  \r\n        const today = new Date();\r\n        const dates = Array.from({ length: 7 }, (_, i) => {\r\n          const date = new Date(today);\r\n          date.setDate(today.getDate() - i);\r\n          return date.toISOString().split('T')[0];\r\n        }).reverse();\r\n  \r\n        const orderAmounts = dates.map(date => {\r\n          return orderDetails.value\r\n            .filter(order => order.orderTime.startsWith(date))\r\n            .reduce((sum, order) => sum + order.odPMoney, 0);\r\n        });\r\n  \r\n        const option = {\r\n          title: {\r\n            text: '订单金额统计',\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis',\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            data: dates,\r\n          },\r\n          yAxis: {\r\n            type: 'value',\r\n          },\r\n          series: [\r\n            {\r\n              data: orderAmounts,\r\n              type: 'line',\r\n            },\r\n          ],\r\n        };\r\n        console.log(option)\r\n        chartInstance.setOption(option);\r\n      };\r\n  \r\n      onMounted(() => {\r\n        if (activeView.value === 'orders') {\r\n          fetchOrderDetails();\r\n        }\r\n      });\r\n  \r\n      return {\r\n        activeView,\r\n        orderDetails,\r\n        products,\r\n        showOrders,\r\n        showProducts,\r\n        chartRef,\r\n        chartInstance\r\n      };\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .merchant-dashboard {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100vh;\r\n  }\r\n  \r\n  .el-container {\r\n    height: 100%;\r\n  }\r\n  \r\n  .el-aside {\r\n    background-color: #f5f5f5;\r\n  }\r\n  \r\n  .el-main {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .box-card {\r\n    margin-top: 20px;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}