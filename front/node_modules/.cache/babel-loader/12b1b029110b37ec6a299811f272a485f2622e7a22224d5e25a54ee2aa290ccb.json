{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport axios from 'axios';\nexport default {\n  name: 'CustomerPage',\n  setup() {\n    const products = ref([]);\n    const showDetails = ref(false);\n    const selectedProduct = ref({});\n    const categories = ref(['全部', '家居日用', '穿搭服饰', '米面粮油', '生鲜水果', '科技数码', '运动户外']);\n    const searchQuery = ref('');\n    const deliveryAddress = ref('');\n    const purchaseQuantity = ref(1);\n    const showPurchaseForm = ref(false);\n    const cartCount = ref(0);\n    const showCart = ref(false);\n    const cartItems = ref([]);\n    const fetchProducts = async (category = '全部') => {\n      try {\n        const url = category === '全部' ? '/eShop/product/alllist' : `/eShop/product/typelist?pType=${category}`;\n        const response = await axios.get(url);\n        if (response.data.code === 200) {\n          products.value = response.data.data;\n        } else {\n          console.error('Failed to fetch products:', response.data.msg);\n        }\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n    const fetchProductsByCategory = category => {\n      fetchProducts(category);\n    };\n    const searchProduct = async () => {\n      try {\n        const response = await axios.get(`/eShop/product/getproduct`, {\n          params: {\n            pName: searchQuery.value\n          }\n        });\n        if (response.data.code === 200) {\n          products.value = response.data.data;\n        } else {\n          console.error('Failed to fetch products:', response.data.msg);\n        }\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n    const showProductDetails = product => {\n      selectedProduct.value = product;\n      showDetails.value = true;\n      showPurchaseForm.value = false;\n    };\n    const formatPath = path => path.replace(/\\\\/g, '/');\n    const decreaseQuantity = () => {\n      if (purchaseQuantity.value > 1) {\n        purchaseQuantity.value--;\n      }\n    };\n    const increaseQuantity = () => {\n      purchaseQuantity.value++;\n    };\n    const addToCart = async () => {\n      const uid = localStorage.getItem('uid');\n      if (!uid) {\n        console.error('User ID not found in localStorage');\n        return;\n      }\n      const cartData = {\n        uid0: uid,\n        pid: selectedProduct.value.pid,\n        p_id_count: purchaseQuantity.value\n      };\n      try {\n        const response = await axios.post('/eShop/shopcar/addshopcar', cartData);\n        if (response.data.code === 200) {\n          alert('商品已加入购物车！');\n          fetchCartCount(); // 更新购物车数量\n        } else {\n          alert('加入购物车失败，请重试。');\n        }\n      } catch (error) {\n        console.error('Error adding to cart:', error);\n        alert('加入购物车失败，请重试。');\n      }\n    };\n    const confirmPurchase = async () => {\n      const uid = localStorage.getItem('uid');\n      if (!uid) {\n        console.error('User ID not found in localStorage');\n        return;\n      }\n      const orderData = {\n        uid0: uid,\n        ostate: '0',\n        otime: Date.now(),\n        pcount: purchaseQuantity.value.toString()\n      };\n      try {\n        const orderResponse = await axios.post('/eShop/orders/addorders', orderData);\n        const oid = orderResponse.data.data;\n        if (oid) {\n          const orderDetailData = {\n            oid: oid,\n            pid: selectedProduct.value.pid,\n            odPCount: purchaseQuantity.value\n          };\n          const orderDetailResponse = await axios.post('/eShop/orders/addordersdetail', orderDetailData);\n          if (orderDetailResponse.data.data) {\n            alert('订单提交成功！');\n          } else {\n            alert('订单提交失败，请重试。');\n          }\n        } else {\n          alert('订单提交失败，请重试。');\n        }\n      } catch (error) {\n        console.error('Error processing purchase:', error);\n        alert('订单提交失败，请重试。');\n      }\n    };\n    const fetchCartCount = async () => {\n      const uid = localStorage.getItem('uid');\n      if (!uid) {\n        console.error('User ID not found in localStorage');\n        return;\n      }\n      try {\n        const response = await axios.get('/eShop/shopcar/getusershopcarcount', {\n          params: {\n            uid: uid\n          }\n        });\n        if (response.data.code === 200) {\n          cartCount.value = response.data.data;\n        } else {\n          console.error('Failed to fetch cart count:', response.data.msg);\n        }\n      } catch (error) {\n        console.error('Error fetching cart count:', error);\n      }\n    };\n    const fetchCartItems = async () => {\n      const uid = localStorage.getItem('uid');\n      if (!uid) {\n        console.error('User ID not found in localStorage');\n        return;\n      }\n      try {\n        const response = await axios.get('/eShop/shopcar/getusershopcar', {\n          params: {\n            uid: uid\n          }\n        });\n        if (response.data.code === 200) {\n          const items = response.data.data;\n          for (const item of items) {\n            const countResponse = await axios.get('/eShop/shopcar/getproductcount', {\n              params: {\n                uid0: uid,\n                pId: item.pid\n              }\n            });\n            if (countResponse.data.code === 200) {\n              item.quantity = countResponse.data.data;\n            } else {\n              item.quantity = 1; // 默认值\n            }\n          }\n          cartItems.value = items;\n        } else {\n          console.error('Failed to fetch cart items:', response.data.msg);\n        }\n      } catch (error) {\n        console.error('Error fetching cart items:', error);\n      }\n    };\n    const decreaseCartItemQuantity = item => {\n      if (item.quantity > 1) {\n        item.quantity--;\n      }\n    };\n    const increaseCartItemQuantity = item => {\n      item.quantity++;\n    };\n    const showCartDialog = () => {\n      fetchCartItems();\n      showCart.value = true;\n    };\n    const scrollToTop = () => {\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    };\n    onMounted(() => {\n      const jwt = localStorage.getItem('jwt');\n      if (jwt) {\n        axios.defaults.headers.common['Authorization'] = `${jwt}`;\n      }\n      fetchProducts();\n      fetchCartCount();\n    });\n    return {\n      products,\n      showDetails,\n      selectedProduct,\n      categories,\n      searchQuery,\n      deliveryAddress,\n      purchaseQuantity,\n      showPurchaseForm,\n      cartCount,\n      showCart,\n      cartItems,\n      fetchProductsByCategory,\n      searchProduct,\n      showProductDetails,\n      formatPath,\n      decreaseQuantity,\n      increaseQuantity,\n      addToCart,\n      confirmPurchase,\n      scrollToTop,\n      showCartDialog,\n      decreaseCartItemQuantity,\n      increaseCartItemQuantity\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","name","setup","products","showDetails","selectedProduct","categories","searchQuery","deliveryAddress","purchaseQuantity","showPurchaseForm","cartCount","showCart","cartItems","fetchProducts","category","url","response","get","data","code","value","console","error","msg","fetchProductsByCategory","searchProduct","params","pName","showProductDetails","product","formatPath","path","replace","decreaseQuantity","increaseQuantity","addToCart","uid","localStorage","getItem","cartData","uid0","pid","p_id_count","post","alert","fetchCartCount","confirmPurchase","orderData","ostate","otime","Date","now","pcount","toString","orderResponse","oid","orderDetailData","odPCount","orderDetailResponse","fetchCartItems","items","item","countResponse","pId","quantity","decreaseCartItemQuantity","increaseCartItemQuantity","showCartDialog","scrollToTop","window","scrollTo","top","behavior","jwt","defaults","headers","common"],"sources":["E:\\Vue\\jsproject\\shop\\src\\views\\CustomerPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <!-- 侧边悬浮栏 -->\r\n    <div class=\"sidebar\">\r\n      <div class=\"sidebar-item\" @click=\"showCartDialog\">\r\n        <img src=\"/icon/cart (1).png\" alt=\"购物车\" class=\"icon\" />\r\n        <span class=\"badge\">{{ cartCount }}</span>\r\n        <p>购物车</p>\r\n      </div>\r\n      <div class=\"sidebar-item\">\r\n        <img src=\"/icon/my.png\" alt=\"我的\" class=\"icon\" />\r\n        <p>我的</p>\r\n      </div>\r\n      <div class=\"sidebar-item\">\r\n        <img src=\"/icon/service.png\" alt=\"客服\" class=\"icon\" />\r\n        <p>客服</p>\r\n      </div>\r\n      <div class=\"sidebar-item\">\r\n        <img src=\"/icon/post.png\" alt=\"反馈\" class=\"icon\" />\r\n        <p>反馈</p>\r\n      </div>\r\n      <div class=\"sidebar-item\" @click=\"scrollToTop\">\r\n        <img src=\"/icon/top (1).png\" alt=\"回顶部\" class=\"icon\" />\r\n        <p>回顶部</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 其他内容 -->\r\n    <div class=\"sticky-header\">\r\n      <div class=\"header\">\r\n        <img src=\"@/assets/image.png\" alt=\"Logo\" class=\"logo\" />\r\n        <div class=\"search-bar\">\r\n          <input\r\n            type=\"text\"\r\n            v-model=\"searchQuery\"\r\n            placeholder=\"输入商品名\"\r\n            class=\"search-input\"\r\n          />\r\n          <button @click=\"searchProduct\" class=\"search-button\">搜索</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"header-divider\"></div>\r\n      <div class=\"category-bar\">\r\n        <div v-for=\"(category, index) in categories\" :key=\"category\" class=\"category-item\">\r\n          <button @click=\"fetchProductsByCategory(category)\">\r\n            {{ category }}\r\n          </button>\r\n          <span v-if=\"index < categories.length - 1\" class=\"divider\"></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"product-container\">\r\n      <div class=\"product-grid\">\r\n        <div v-for=\"product in products\" :key=\"product.id\" class=\"product-card\" @click=\"showProductDetails(product)\">\r\n          <div class=\"product-image-wrapper\">\r\n            <img :src=\"formatPath(product.purl)\" alt=\"商品图片\" class=\"product-image\" />\r\n          </div>\r\n          <div class=\"product-info\">\r\n            <h3 class=\"product-name\">{{ product.pname }}</h3>\r\n            <hr class=\"product-divider\" />\r\n            <p class=\"product-price\">{{ product.ppri }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <el-dialog v-model=\"showDetails\" title=\"商品详情\" :width=\"600\">\r\n        <img :src=\"formatPath(selectedProduct.purl)\" alt=\"商品图片\" class=\"product-image-large\" />\r\n        <p>名称: {{ selectedProduct.pname }}</p>\r\n        <p>类型: {{ selectedProduct.ptype }}</p>\r\n        <p>描述: {{ selectedProduct.pdes }}</p>\r\n        <p>库存: {{ selectedProduct.pcount }}</p>\r\n        <p>价格: ¥{{ selectedProduct.ppri }}</p>\r\n\r\n        <!-- 数量选择器 -->\r\n        <div class=\"quantity-control\">\r\n          <button @click=\"decreaseQuantity\">-</button>\r\n          <input type=\"number\" v-model.number=\"purchaseQuantity\" min=\"1\" class=\"quantity-input\" />\r\n          <button @click=\"increaseQuantity\">+</button>\r\n        </div>\r\n\r\n        <!-- 按钮 -->\r\n        <div class=\"button-group\">\r\n          <button @click=\"addToCart\" class=\"add-to-cart-button\">加入购物车</button>\r\n          <button @click=\"showPurchaseForm = true\" class=\"buy-now-button\">立即购买</button>\r\n        </div>\r\n\r\n        <!-- 购买表单 -->\r\n        <div v-if=\"showPurchaseForm\" class=\"purchase-form\">\r\n          <label for=\"address\">配送地址:</label>\r\n          <input type=\"text\" v-model=\"deliveryAddress\" placeholder=\"请输入配送地址\" class=\"address-input\" />\r\n\r\n          <button @click=\"confirmPurchase\" class=\"confirm-button\">确认购买</button>\r\n        </div>\r\n      </el-dialog>\r\n\r\n      <!-- 购物车弹窗 -->\r\n      <el-dialog v-model=\"showCart\" title=\"购物车\" :width=\"600\">\r\n        <div v-for=\"item in cartItems\" :key=\"item.id\" class=\"cart-item\">\r\n          <div class=\"cart-item-image\">\r\n            <img :src=\"formatPath(item.purl)\" alt=\"商品图片\" />\r\n          </div>\r\n          <div class=\"cart-item-info\">\r\n            <p>名称: {{ item.pname }}</p> <!-- 新增商品名称展示 -->\r\n            <p>价格: ¥{{ item.ppri }}</p>\r\n            <div class=\"quantity-control\">\r\n              <button @click=\"decreaseCartItemQuantity(item)\">-</button>\r\n              <input type=\"number\" v-model.number=\"item.quantity\" min=\"1\" class=\"quantity-input\" />\r\n              <button @click=\"increaseCartItemQuantity(item)\">+</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-dialog>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'CustomerPage',\r\n  setup() {\r\n    const products = ref([]);\r\n    const showDetails = ref(false);\r\n    const selectedProduct = ref({});\r\n    const categories = ref(['全部', '家居日用', '穿搭服饰', '米面粮油', '生鲜水果', '科技数码', '运动户外']);\r\n    const searchQuery = ref('');\r\n    const deliveryAddress = ref('');\r\n    const purchaseQuantity = ref(1);\r\n    const showPurchaseForm = ref(false);\r\n    const cartCount = ref(0);\r\n    const showCart = ref(false);\r\n    const cartItems = ref([]);\r\n\r\n    const fetchProducts = async (category = '全部') => {\r\n      try {\r\n        const url = category === '全部' ? '/eShop/product/alllist' : `/eShop/product/typelist?pType=${category}`;\r\n        const response = await axios.get(url);\r\n        if (response.data.code === 200) {\r\n          products.value = response.data.data;\r\n        } else {\r\n          console.error('Failed to fetch products:', response.data.msg);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n      }\r\n    };\r\n\r\n    const fetchProductsByCategory = (category) => {\r\n      fetchProducts(category);\r\n    };\r\n\r\n    const searchProduct = async () => {\r\n      try {\r\n        const response = await axios.get(`/eShop/product/getproduct`, {\r\n          params: { pName: searchQuery.value },\r\n        });\r\n        if (response.data.code === 200) {\r\n          products.value = response.data.data;\r\n        } else {\r\n          console.error('Failed to fetch products:', response.data.msg);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n      }\r\n    };\r\n\r\n    const showProductDetails = (product) => {\r\n      selectedProduct.value = product;\r\n      showDetails.value = true;\r\n      showPurchaseForm.value = false;\r\n    };\r\n\r\n    const formatPath = (path) => path.replace(/\\\\/g, '/');\r\n\r\n    const decreaseQuantity = () => {\r\n      if (purchaseQuantity.value > 1) {\r\n        purchaseQuantity.value--;\r\n      }\r\n    };\r\n\r\n    const increaseQuantity = () => {\r\n      purchaseQuantity.value++;\r\n    };\r\n\r\n    const addToCart = async () => {\r\n      const uid = localStorage.getItem('uid');\r\n      if (!uid) {\r\n        console.error('User ID not found in localStorage');\r\n        return;\r\n      }\r\n\r\n      const cartData = {\r\n        uid0: uid,\r\n        pid: selectedProduct.value.pid,\r\n        p_id_count: purchaseQuantity.value,\r\n      };\r\n\r\n      try {\r\n        const response = await axios.post('/eShop/shopcar/addshopcar', cartData);\r\n        if (response.data.code === 200) {\r\n          alert('商品已加入购物车！');\r\n          fetchCartCount(); // 更新购物车数量\r\n        } else {\r\n          alert('加入购物车失败，请重试。');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error adding to cart:', error);\r\n        alert('加入购物车失败，请重试。');\r\n      }\r\n    };\r\n\r\n    const confirmPurchase = async () => {\r\n      const uid = localStorage.getItem('uid');\r\n      if (!uid) {\r\n        console.error('User ID not found in localStorage');\r\n        return;\r\n      }\r\n\r\n      const orderData = {\r\n        uid0: uid,\r\n        ostate: '0',\r\n        otime: Date.now(),\r\n        pcount: purchaseQuantity.value.toString(),\r\n      };\r\n\r\n      try {\r\n        const orderResponse = await axios.post('/eShop/orders/addorders', orderData);\r\n        const oid = orderResponse.data.data;\r\n\r\n        if (oid) {\r\n          const orderDetailData = {\r\n            oid: oid,\r\n            pid: selectedProduct.value.pid,\r\n            odPCount: purchaseQuantity.value,\r\n          };\r\n\r\n          const orderDetailResponse = await axios.post('/eShop/orders/addordersdetail', orderDetailData);\r\n          if (orderDetailResponse.data.data) {\r\n            alert('订单提交成功！');\r\n          } else {\r\n            alert('订单提交失败，请重试。');\r\n          }\r\n        } else {\r\n          alert('订单提交失败，请重试。');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error processing purchase:', error);\r\n        alert('订单提交失败，请重试。');\r\n      }\r\n    };\r\n\r\n    const fetchCartCount = async () => {\r\n      const uid = localStorage.getItem('uid');\r\n      if (!uid) {\r\n        console.error('User ID not found in localStorage');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get('/eShop/shopcar/getusershopcarcount', {\r\n          params: { uid: uid },\r\n        });\r\n        if (response.data.code === 200) {\r\n          cartCount.value = response.data.data;\r\n        } else {\r\n          console.error('Failed to fetch cart count:', response.data.msg);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching cart count:', error);\r\n      }\r\n    };\r\n\r\n    const fetchCartItems = async () => {\r\n      const uid = localStorage.getItem('uid');\r\n      if (!uid) {\r\n        console.error('User ID not found in localStorage');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get('/eShop/shopcar/getusershopcar', {\r\n          params: { uid: uid },\r\n        });\r\n        if (response.data.code === 200) {\r\n          const items = response.data.data;\r\n          for (const item of items) {\r\n            const countResponse = await axios.get('/eShop/shopcar/getproductcount', {\r\n              params: { uid0: uid, pId: item.pid },\r\n            });\r\n            if (countResponse.data.code === 200) {\r\n              item.quantity = countResponse.data.data;\r\n            } else {\r\n              item.quantity = 1; // 默认值\r\n            }\r\n          }\r\n          cartItems.value = items;\r\n        } else {\r\n          console.error('Failed to fetch cart items:', response.data.msg);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching cart items:', error);\r\n      }\r\n    };\r\n\r\n    const decreaseCartItemQuantity = (item) => {\r\n      if (item.quantity > 1) {\r\n        item.quantity--;\r\n      }\r\n    };\r\n\r\n    const increaseCartItemQuantity = (item) => {\r\n      item.quantity++;\r\n    };\r\n\r\n    const showCartDialog = () => {\r\n      fetchCartItems();\r\n      showCart.value = true;\r\n    };\r\n\r\n    const scrollToTop = () => {\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    onMounted(() => {\r\n      const jwt = localStorage.getItem('jwt');\r\n      if (jwt) {\r\n        axios.defaults.headers.common['Authorization'] = `${jwt}`;\r\n      }\r\n      fetchProducts();\r\n      fetchCartCount();\r\n    });\r\n\r\n    return {\r\n      products,\r\n      showDetails,\r\n      selectedProduct,\r\n      categories,\r\n      searchQuery,\r\n      deliveryAddress,\r\n      purchaseQuantity,\r\n      showPurchaseForm,\r\n      cartCount,\r\n      showCart,\r\n      cartItems,\r\n      fetchProductsByCategory,\r\n      searchProduct,\r\n      showProductDetails,\r\n      formatPath,\r\n      decreaseQuantity,\r\n      increaseQuantity,\r\n      addToCart,\r\n      confirmPurchase,\r\n      scrollToTop,\r\n      showCartDialog,\r\n      decreaseCartItemQuantity,\r\n      increaseCartItemQuantity,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 样式保持不变 */\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}