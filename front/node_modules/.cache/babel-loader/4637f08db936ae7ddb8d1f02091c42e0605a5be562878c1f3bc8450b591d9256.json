{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    class: \"login-card\"\n  }, {\n    default: _withCtx(() => [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", {\n      class: \"login-title\"\n    }, \"登录\", -1 /* HOISTED */)), _createVNode(_component_el_form, {\n      model: $setup.loginForm,\n      onSubmit: _withModifiers($setup.handleLogin, [\"prevent\"])\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.loginForm.username,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.loginForm.username = $event),\n          placeholder: \"用户名\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.loginForm.password,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.loginForm.password = $event),\n          type: \"password\",\n          placeholder: \"密码\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $setup.handleLogin\n        }, {\n          default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"登录\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\", \"onSubmit\"])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","default","_withCtx","_createElementVNode","_component_el_form","model","$setup","loginForm","onSubmit","_withModifiers","handleLogin","_component_el_form_item","_component_el_input","modelValue","username","_cache","$event","placeholder","_","password","type","_component_el_button","onClick","_createTextVNode"],"sources":["E:\\Vue\\jsproject\\shop\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n    <div class=\"login-container\">\r\n      <el-card class=\"login-card\">\r\n        <h2 class=\"login-title\">登录</h2>\r\n        <el-form :model=\"loginForm\" @submit.prevent=\"handleLogin\">\r\n          <el-form-item>\r\n            <el-input v-model=\"loginForm.username\" placeholder=\"用户名\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-input\r\n              v-model=\"loginForm.password\"\r\n              type=\"password\"\r\n              placeholder=\"密码\"\r\n            ></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"handleLogin\">登录</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-card>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref } from 'vue';\r\n  import { ElMessage } from 'element-plus';\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: 'LoginPage',\r\n    setup() {\r\n      const loginForm = ref({\r\n        username: '',\r\n        password: '',\r\n      });\r\n  \r\n      const handleLogin = async () => {\r\n        try {\r\n          const response = await axios.post('/eShop/user/login', {\r\n            uname: loginForm.value.username,\r\n            password: loginForm.value.password,\r\n          });\r\n  \r\n          const { code, msg, data } = response.data;\r\n  \r\n          if (code === 200 && msg === '成功') {\r\n            ElMessage.success('登录成功');\r\n            if (data === '商家') {\r\n              window.location.href = '/merchant-dashboard';\r\n            } else if (data === '顾客') {\r\n              window.location.href = '/customer-dashboard';\r\n            }\r\n          } else {\r\n            ElMessage.error(data || '登录失败');\r\n          }\r\n        } catch (error) {\r\n          ElMessage.error('请求失败，请稍后重试');\r\n        }\r\n      };\r\n  \r\n      return {\r\n        loginForm,\r\n        handleLogin,\r\n      };\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .login-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n    background: linear-gradient(to right, #6a11cb, #2575fc);\r\n  }\r\n  \r\n  .login-card {\r\n    width: 400px;\r\n    padding: 20px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    border-radius: 8px;\r\n    background-color: #fff;\r\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  }\r\n  \r\n  .login-card:hover {\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n  }\r\n  \r\n  .login-title {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n    color: #333;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .el-input {\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  .el-button {\r\n    width: 100%;\r\n    border-radius: 4px;\r\n    background-color: #2575fc;\r\n    color: #fff;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .el-button:hover {\r\n    background-color: #1a5bb8;\r\n  }\r\n  </style>\r\n  \r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAiB;;;;;;;uBAA5BC,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBJC,YAAA,CAiBUC,kBAAA;IAjBDJ,KAAK,EAAC;EAAY;IAFjCK,OAAA,EAAAC,QAAA,CAGQ,MAA+B,C,0BAA/BC,mBAAA,CAA+B;MAA3BP,KAAK,EAAC;IAAa,GAAC,IAAE,sBAC1BG,YAAA,CAcUK,kBAAA;MAdAC,KAAK,EAAEC,MAAA,CAAAC,SAAS;MAAGC,QAAM,EAJ3CC,cAAA,CAIqDH,MAAA,CAAAI,WAAW;;MAJhET,OAAA,EAAAC,QAAA,CAKU,MAEe,CAFfH,YAAA,CAEeY,uBAAA;QAPzBV,OAAA,EAAAC,QAAA,CAMY,MAAoE,CAApEH,YAAA,CAAoEa,mBAAA;UANhFC,UAAA,EAM+BP,MAAA,CAAAC,SAAS,CAACO,QAAQ;UANjD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAM+BV,MAAA,CAAAC,SAAS,CAACO,QAAQ,GAAAE,MAAA;UAAEC,WAAW,EAAC;;QAN/DC,CAAA;UAQUnB,YAAA,CAMeY,uBAAA;QAdzBV,OAAA,EAAAC,QAAA,CASY,MAIY,CAJZH,YAAA,CAIYa,mBAAA;UAbxBC,UAAA,EAUuBP,MAAA,CAAAC,SAAS,CAACY,QAAQ;UAVzC,uBAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAUuBV,MAAA,CAAAC,SAAS,CAACY,QAAQ,GAAAH,MAAA;UAC3BI,IAAI,EAAC,UAAU;UACfH,WAAW,EAAC;;QAZ1BC,CAAA;UAeUnB,YAAA,CAEeY,uBAAA;QAjBzBV,OAAA,EAAAC,QAAA,CAgBY,MAA6D,CAA7DH,YAAA,CAA6DsB,oBAAA;UAAlDD,IAAI,EAAC,SAAS;UAAEE,OAAK,EAAEhB,MAAA,CAAAI;;UAhB9CT,OAAA,EAAAC,QAAA,CAgB2D,MAAEa,MAAA,QAAAA,MAAA,OAhB7DQ,gBAAA,CAgB2D,IAAE,E;UAhB7DL,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}